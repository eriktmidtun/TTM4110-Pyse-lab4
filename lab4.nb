(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    259087,       5200]
NotebookOptionsPosition[    251669,       5081]
NotebookOutlinePosition[    252166,       5101]
CellTagsIndexPosition[    252123,       5098]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Example of use of \
\[OpenCurlyDoubleQuote]StateDiagrams.m\[CloseCurlyDoubleQuote]",
 FontWeight->"Plain"]], "Subsection",
 CellChangeTimes->{{3.742619198334618*^9, 3.742619301097269*^9}, 
   3.7426417849549923`*^9, {3.7485777812908497`*^9, 3.7485778471329603`*^9}},
 FontWeight->"Bold",ExpressionUUID->"824618f0-1d09-42df-a9c5-c583903dd864"],

Cell[CellGroupData[{

Cell["Initialization", "Subsubsection",
 CellChangeTimes->{{3.742619421979721*^9, 3.7426194337243633`*^9}, {
  3.813471876365944*^9, 
  3.81347187707343*^9}},ExpressionUUID->"72419eb2-91be-45e5-9b93-\
df97885a2479"],

Cell["\<\
Loads the StateDiagrams.m package (change the directory to the folder you are \
using)\
\>", "Text",
 CellChangeTimes->{{3.742619320807541*^9, 3.742619375631261*^9}, {
  3.749042284823195*^9, 
  3.7490423087727633`*^9}},ExpressionUUID->"d3e6efdf-489a-4ab3-bc3e-\
cb9eefd89308"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dir", " ", "=", " ", 
   RowBox[{"Directory", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780125961772053*^9, 3.780125975357009*^9}, {
   3.813904885413459*^9, 3.8139048868066463`*^9}, {3.813904926444459*^9, 
   3.81390493041805*^9}, {3.813904976376052*^9, 3.813904993265431*^9}, 
   3.8139054756590147`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"965b3fa0-d5f6-4e6c-a96b-8994fa57c490"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", "\"\<./\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "SetDirectory", "[", "\"\<Box Sync/NTNU/TTM4110/Mathematica\>\"", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<StateDiagrams_mma-v12.m\>\""}]}], "Input",
 CellChangeTimes->{
  3.41008983028036*^9, {3.742703272977613*^9, 3.742703320818762*^9}, {
   3.749042275233127*^9, 3.749042275690254*^9}, {3.7801226501759644`*^9, 
   3.780122653010054*^9}, {3.780126042084928*^9, 3.7801260434943037`*^9}, {
   3.780826478587117*^9, 3.780826480056499*^9}, 3.7808265193324537`*^9, 
   3.7814372445656033`*^9, {3.813904956523827*^9, 3.813904957610106*^9}, {
   3.81390501029613*^9, 3.813905014102504*^9}, {3.813905130028022*^9, 
   3.813905153244133*^9}, 3.813905487184764*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"421a09d7-d37f-4538-bb6b-af05fdd0f926"],

Cell["\<\
A list of the available functions in the package is obtained by the command:\
\>", "Text",
 CellChangeTimes->{{3.780215784544132*^9, 
  3.7802157912821493`*^9}},ExpressionUUID->"1fc6c123-91a9-4238-8c2f-\
ed25ab184dcc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Dependability`StateDiagrams`*\>\"", 
  "]"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"e71cfb67-d6b1-42d0-a952-78bb65445319"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ArrangeMatrix\"\>", ",", "\<\"DownTimeDensity\"\>", 
   ",", "\<\"DownTimeDensityLaplace\"\>", ",", "\<\"GenHomogeneousSystem\"\>",
    ",", "\<\"KoutofN\"\>", ",", "\<\"KoutofNMode\"\>", 
   ",", "\<\"KroenSum\"\>", ",", "\<\"LabelList\"\>", ",", "\<\"MDT\"\>", 
   ",", "\<\"MergeStates\"\>", ",", "\<\"MTBF\"\>", ",", "\<\"MTFF\"\>", 
   ",", "\<\"MTTF\"\>", ",", "\<\"MUT\"\>", ",", "\<\"ParallelMode\"\>", 
   ",", "\<\"PlotDiagram\"\>", ",", "\<\"ProbStationary\"\>", 
   ",", "\<\"ProbTransient\"\>", ",", "\<\"RelFunc\"\>", 
   ",", "\<\"SeriesMode\"\>", ",", "\<\"SetDiagonal\"\>", 
   ",", "\<\"StepPlot\"\>", ",", "\<\"UnAvailability\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.7510936960571404`*^9, 3.751101464366542*^9, 3.751103530219914*^9, 
   3.7784871199812393`*^9, 3.780027859154724*^9, 3.7801224267144947`*^9, {
   3.780194589457775*^9, 3.780194593933894*^9}, 3.7802157951262302`*^9, 
   3.780230127186015*^9, 3.780278382291006*^9, 3.78062627055169*^9, 
   3.780826533013468*^9, 3.781172413635539*^9, 3.781255397883862*^9, 
   3.781269117042261*^9, 3.7814114615656023`*^9, 3.781437199562274*^9, 
   3.781493050545559*^9, 3.813471326748221*^9, 3.813481984334526*^9, 
   3.813505899698298*^9, 3.813551329534483*^9, 3.813585408164357*^9, {
   3.813640990105914*^9, 3.8136410135222063`*^9}, 3.813641209253065*^9, 
   3.813641259360737*^9, 3.8139052361096773`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"290fc109-21fe-476a-920e-0937ea694670"]
}, Open  ]],

Cell[TextData[{
 "Check syntax in the examples in task 1 below, and by ?UnAvailability, etc.. \
of mouseover.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztfQd8Fce1fhzbieM4L47j2Ol24jTnOck/5b2Ul9jJS3u26b0IRAfROxjT
e++99957EVUSopsiIQkQSIAkUEGgeu9ewfznO7MzO3sl0AVUQMz8fqur3Z2d
b+fM7Dlzzsyc84NmnWq0+vznPve5bi/xPzWa9vpb165NP6n5Kj+p3bFbSOuO
LVt82LF7y9Ytu/6h2fP84qf8WPLc5z73Av9lJplkkkkmmWSSSSaZZJJJJplk
kkkmmWSSSSaZZJJJJplkkkkmmWSSSSaVeMrPzy/vV7hvKsl3y8vLK7GyTDLJ
JJNMKpl09+5d9sc//pF94QtfYPPnz3fdmzNnDqtTp446goKCHgtr0KBBVM7x
48fL5d1GjhzJXnjhBVa1atVHen+TTDLJpCcp/e1vf2O/+tWvWEJCgrp26NAh
utatW7dHKjMpKYmexzFhwoSSetViU0ZGBvFnLFcPDg523WvVqhVdl8cXv/jF
x8L685//TOVs3LixXN7t3//+N+V9+eWXmWVZReZBO65YsYL5fL6A3tEkk0wy
qbzS17/+deJpcXFx6tr69evpWs2aNR+pzKlTpyq++vOf/7ykXjWgtHr1ataj
Rw8WHx9f6N69e/dYSkpKuciikn63qKgo1rVrV7Zt27b75oEehvKysrICfkeT
TDLJpPJIgcgijKujo6PZ9evX6Tw5OZnyHD58mHiof4Ku9fnPf579/ve/p3Ji
YmLUPegHKOvq1auFnrt06RLdKygocF0H3q5du9iGDRvYhQsXXPdg+8Iz/kd6
enqR9b1582ZA/P5BmEhSFm3atIldvnyZrVu3jp04ccL17vd7t7S0tEd6N+iu
/mUBW0/Av3btGr3zt771LSrv2LFjKj/qhYTncO4vp2Rb+5drkkkmmVSaKRBZ
JMfrH3zwAWvatKnLntSwYUNXeeCzzz//PPvNb37Dxo8fT3mGDh2q7oeFhdG1
733ve8SrZYKMwlzKV77yFZaTk0PX9u/fr8b2+tG6dWv1XGZmZqH7OMaMGVNk
fYvj94FgIklZ9Otf/5o999xzKh/k8J07d0rl3f75z38WKuu//uu/XHmgcxWF
KQ85v9S5c2c6x6+e1qxZQ9erVatW5DuYZJJJJpVGehhZhAOyol27dsTTcI45
EH1sPXfuXLreu3dvdu7cOcWv9fTuu+/S9dDQUHVN2vVatmyprkHXAF9u3Lgx
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
ImSK19ZD7F+vpf16LeLzGw/HsrHrI9m24xfZHc7/cR+/OB+7/ijbGBlLMkLX
aZSs4WUIm5lzwEbnVRj3x8/OFbJHHTl5SiZl5XiUbMJ1YavzFIsfrvRBpz0t
Vxv7XPfEdWdNiWw7vZ/II1/es3yFdWWtzxh8g2/wDf7Tgl8WNjo5f5On8e98
zruJf3uda7h/7koq6T4zuA4UGXudzYIutOU4O3Plppij8dryhA7Hfucu37Jl
0VX72oPxM3OFvkOyJlv+n8/1JYvleCy6npGNe3lqPqk4fKzZ8Gq0V/S3fO72
8hVuJ9d1TeeidROW1HvvuttW6sGyjbV+ZPANvsE3+E86flmso1PywyNkiTgK
bJngY/EpmSzqShr/zSD+nnEnj62PiGXj1h2h34ysPHo+PuUW2ecu37hll2Ep
+ZRPcqVA/O8poP/3RV8juVAcPuRLRlY+yRvSh+j/fF6ORfNDGbYMco68YvGx
n9g9xrDbr9Ccn9hD5qy3v0//KPCxFi1bsfd+8QuWcSuTrsfGXWCNg5uwRo2D
WWN+XLl2XeQv8Ln7UhH4w4YPZwMGDX4gfsqNVPaf//ke69ixkyozhmMGc6xG
dDRmiVev28/dVf0PeVvyd/3FL3/JMjIyS6z+/tddfd4Pv7j6Pwn4U6ZOY527
dX0gfsqNm6INOnWscPU3+AZfx8cce2km+HUQ/FnIg0K/nH/fyfawrUeFHW7T
kThhh+O8/WrabS4/Coj3bz5ygY1fH8m28HyYu8mzdLki5Y1F8kbqO9CLhFwq
Hp/kUbaQRzhu5whbIO6RLMrKVzILv8Xhw0Z3JyvHHg8UuH/tMYW7TXFu73u2
7hbZ7h9+/BF79WtfY9eTUqgN4y5eYs2aNWMfvP8B+S09cy5K6xdF4Gr47/Nn
fv/7PzwQP/HqNYodW6VKVTqHPh538SJr1rw5++ADgXn23Dm7vzn9D/gffvQx
e/VV/q7JyS585K9Trz67fSf7oet/OyeHNW/Rgo5p06Y530kR+MXV/1Ho77ZH
+B4bv3adOuz7b731QPyEa9fYf/zHV1nlKtVKBH/Llq28/VqwFvw4G32+XOtf
3vQ3+E8WfngZ+F1QuoMmJzy6jc7m4TGJWMNwks3YdoKd5/oP7kEPms7PZ2w9
waIT05Qu4pYnju1O6SoeWxZ5fcXi38F8UVaefdjrFrg+lAe9KMdeX5eVJ2QV
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
z7fUNXku7llKf8nLd/LR//Y9eS6uFahy87XnIBdCSRZZD4WP/a137H2t6XfE
mjrY6bLzrIfCB13B+1u2aEFtlZvnYd/iY/R27doTL4O9SvjCKyCeANnTmPPN
NWvXs1atWpGsun07m8l9zMTfP+1r6xoWU376lCx6jp0+c1bJINwD1qtf+Qob
MmQo27lrD3vnhz9kH374ET37l7+8z37/37+n/NDT/vCHP1LMVq/XeR7/v/uu
kEXyHcRxV9jo+LsAs9BeN/78p58KWZSf71HrQlHfUVwWPcevX716XdVfzmtA
V/voo49Zm9ZtuA75/4SfP63+aelSL7qs6p9EOsLn2OjRY6ks2PuQB/JDjMn4
mGTffrKBfvPNN9krX36FHTt2TL1PHn+/fQcOOOtM/OoPfKl3fvxxJRYS0o5s
qb/iOi7sZosWLyH8TZu2ED50nOeee47WHqKMU7ZeBD3S8haod8JvHa4X4d7P
3/tPWp/QpEmTIvF/9rN3XW2QlHSDnhs9Wshf2AzR/tBvcd62XTu6/+qrr7Kv
vvIK6VeyvhL/tde+znbt2u2i//3q72570dZ6/yuq/WVe6cPRH1+dG3yDb59H
lIEsyrH5dw7n0TkeaS+z1HW6p8mhPMpnqWf0PPp5nvaMuGepcnHsO3dVK7ts
8aEPwub1jW+8QbIKNO/T51Oue7xBcxqTJk9hcq6vX9/+xM8OHDzE9h84yH79
m98QL7mTle30CdI1pCxy+DvaHXYyXO/evScLDzvMrtpru9/l42nYp6LPx7C5
8+cT7ocff2zz/Q/YG5w3b922jc2YMZM9//nnbZuY7C+ib/4MehHsQ66+CMwo
G7MHC+f6y9WrSap/ud41z6v6LH5ha8T13r0/4e8Vy44cOWrvWyggnQjyG3x5
+vQZzhjLLtNtoxP3MNcG2v37//6P7GIN6zekPBs3beayPIvz96Zsy/YdRJPZ
s+fQvWnTpgsbgyXWtuPanzCH4/qGnDHe2bPRlAfvFnH4CPvyl19mL77wApsx
cxa7FH+ZvfzyyzTXs237ToW/jWOijJMnbVnEZRbK8qjy75KNDva9mzfT2GLb
5gm5549fWBYJ+TsKsoi/c0rKTXp2xMhRRP83eB+DPIqMPMKuX09W/U/Hx3wR
1i6oeQHLn4cUFKK/3v5Wkf877a94lPLBVVCo/rL/G3yDT2u6y8BGl2fzacHf
LbLXy/9z6H+f+JV58iV/99rzQw6fF/wf153nHLliqfM8Va5VLvhYnzid83iM
V/fvP0BjgfjLicTPXn75Syw17ZZoe95WZzhf/9Y3v2XPAbzO6tWrR8/RWN1y
xiGCvz8nZJHPHovY/QFzBl/4wot0f+KkydTWsEm9wHkm+NTvfvtb9nuu+3z0
0UeU//0P/krz3lh3DbvXH//wJ7FW3PK5yoYsql69phjL0BjprsoTFATML1D5
kyZPtvuyeE7qRZgv0sdCOTl57H///r/0nriPNQten+zvd9l7771Hc/GZmVnq
m5D1F7LoOSGL7HeU80U/+MEPaC3h88+/wLp06UZlJSReZ/UbNCBZAd6NfP/+
97+pHI9dj9C9+9ibXF996YsvqTGhXn/gQ9d95ZUvsy+9/BLXb73sf/78Z6JZ
5BGhX2EeCvwf5X/pSy+zESNGqW/t1Gdn6PqSxUtd3zLw69Spw95++21V/wZc
jmFtQ1zcBRc+ZFGN6tUV/SGLgD8KuiC/n3LzJtV9JJdFuP/Pf/5L0Re/r3Dd
aPasOS781157XehF9thU0r+o+qtxsF/76/1P2VrUc3c1PKf99frL/m/wDT5+
S93vQlySzfe94gC/x+GVMsN95HgslT/Hdc9r83mfkheuvPmWWhNHek2+177v
LRd84QPIJ9pAjQ2cMYAzFhEHbHjYz0PrgrU2c9pfG2PItiUd+q4at6SmpnO+
lMqc8Y2P9prevJl+X3zgChnkHhcFip+alsHH5WnOuMqlo9+//hivJyRcFWN2
u8wrCYns9W98Q9m3/PHT03W9SJSblHyD+O2YMeOo/lh36I+P/QKXLyewW5mZ
RdK/S9eu7O//+Mcj1V/S38vb7cqVRN7+noDq79/+j0p/vf2R/9Rnp0ku7dy5
m+yn0I1+99v/ojWJOv7XX7P1ohLGD7T9S6v+Bv/pxS+TNd1KFjj8W+ojkudL
vUKuk3P0E8u2i+nywltIfuS5ZI5Tni5LyhI/zPbD56/byjGGjIfh0oWtAmVT
dY9LClxl4dcj+4P964xfin7mScevVKkyzZlhv00SycbC+NJG9+abb9IaZpRz
3bZXjcbahUfA7/NJH/bCiy+wNWvWVgj6Y34Kuvc//vFPNnDgIPJ/Ad119Jix
VMaEiZPZd779bfa5zz8n9hc9Ie1v8A1+WcR1BV/GfhvEM8c5/ALRr33gXnhc
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
vp15W9gmHRudj/SJ4OBgWjdRt24d1vvTPlxOe2n+JrhxMH/v5qTvzJk7l/KP
GD2K9AOhZ3o4Tl0ab+NdYJeS5QJn9569ZGsCDwB+WEQEXZeyCPlAP7mmOzsn
h9ZcLFi0kLfFFIqxilio0Jtkm2/Zvo31J1uZj+tSS+ndMT+GNRywb0r6C1m0
x9X+iAXfvXt3khfgbZjnQP/bsyeU60L2e9YS74n3adWyFTt99gz1P+isqDfa
/3pyCsmWfI+HaA39t3HjRjT+h40KWNHR52leqC7XgXpwTNzDfFFObh6tU+ja
tSvReeLESaxhgwakK3XhOtKt27fZxfhL1C+hKzdr3ozNnTuvUP/HGKlundr8
3lwhi5YvU/0ftuXz/D5sZFhPiHpB15s8Rcb0Fd8FysngYxzM3dWsWYv6GvSW
Hbt2kv4KusvvD/wbY47s3FxO6/asKZdfTZoEky0A8zpXEq5Q2TNmzuT9qC7F
BRbjtAv0PhhjhLQN4fKzLwsJacvlCP8OsB6b07+d3Ydj4+JorUGbkNaUp++n
/egZfAcYFwCnVu1aYi6Ny+5Q21aNeqD9T5w86ex34Ncgw6DzYp0N8szkcrEW
74dYVyTrX9b8x5/+TyN+xfS7kGLLaUGrPEU7h6aOvHZoLGyf8rpDJ2e84LSZ
3nbOYfGx6w3iKaWJj3mpm2npdB3zEJg7kfju9ZcW5b2Rmk7nubn5/Py2KhN6
wvWk5MDx+Zg79dYtVX/wR7FWSuQ5EBZmr+kuIN1t+IjhXLfIZUkpN131h6yJ
jo2je7L+iAEHe1qg9Id+B/sd1j3p9Pev/8PSP4nLKMSYy7fjIk6aPIUtWrJY
4fftL/Siotof8c5RNx0fOiHmDEHrh2l/6D4bNm+mdfYZmZmu+qPNU9PTC+Hj
fdX6GS/kwS1aV6PXH7Zb2NNuc/l8P3y8q+D5D+7/6Oc3bqbel/44hx70MPRP
uH5NxaWHzpZr87ui8LGmJ/H6dVVealr6fdsfuhXW+Us8oQ8KfMwZXk9Keqjv
H98c6I3/sXZz3PgJJdL/Hpf/PM34FVEWhUkfQHKNoqKRpQ5aC+KVdHXTRH5H
dK7Rz91uDu0lhmhHy26Hio0/bux4Wm8WH39FYRwKD+dj6jq01gljR9jVA8XH
eBb2vPKuP3gW9JFBgwbRmkDogZfixV4TzOnV5XXGOrrSpv+QoUPYJi6LntT2
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
nCf7XnGJ5os8oq5EQ2nDVLZNjYaajujYNC2K1ZNv8zSHzpYqL19rl3y/Q/LC
ssDHOm+MxfG9lwd+ede/JPBho2vYoOFTVf/ww0dYF64bIubck0x/6KYXaV7s
yW1/g/9k4Ae6ji4jcmfAIud+KWXLfJculBq6il2c2LVYvSgtbDOLrPczynOy
zfukWz0owR9dofk30NLj2DPzNZro/8s2cc+1WX401unqs2ltaXmtMsM/FB7B
bt5MLzf88q5/SeBDzzhm7815WuqP+bGTJ0+LWHNPMP2PHTtur+N8ctvf4D8Z
+IHqRWGV32Tp4VseWv7I5Em+wiJq/kDJnaj+DfjVeyxubPti19F91vFfzvwS
PxIXj3wglozrKubbHHrhV9BY0MXjdWguxwEOvYvSL/1p7tyXYwf93OAbfINv
8A1+YPjhcYGtXYAuczLkA7KzPWy6d+8uO9u7hrLFHa7zE+ZNE7hSFkHGFCWL
7t29y8Krfk/oUvbz0YObPFgWcb0oV9LJXz57/Gns0MlNVx/ZTOUaknzVRhqt
Pfo6e02ntSyDb/ANvsE3+A+BH7BeZMuLR7HVJW+ep57Hb9q+tereBcgiW87c
b74Ic0r687DtPSgpvUjKeo9DC/VrObT1+LWDOJdy39LGAs49j5+8d8rX8hp8
g2/wDb7BDwg/UFkkdRfoMQ+T8pMuC9uc/XzM8Bau+0IWCdvb/WSRNyOZJSwY
ymJGtKI5p3uW94GYcq+r42tCrDvUbaBSXucpmoDmBSS3ld7oLUxDp0y/9tPK
KJz36cPPzfW4bcLPWP0NvsE3+GWLH+j+IjnPc7ZXtcCEENK9e+wMzy/XKhwJ
+gXz3Ul3ZYkb065U/C54FG3l+kNdVjv08l8T4qxplL+OXVOnoWo/q7Dsl2OJ
pxm/Vas27Ez0ebZnz17yb/m4+PC5hz282KMEP7JYQ419T49Sf+x/hf842vP5
BNMf+5qwrqQ823/cuPFs7caNLvzkG6m0N5fKfkL7n8F/9vDDA1xHJ+dqjgb/
OmCZkLx5rrOPiB9F2ffipF4EWTSqpPa6JjPhH8ly0VmX5XLflSOXiz48fke+
36/cqyzOtW/7Kcdv3bo1+WrBHh3ss31c/MVLlpJ/cexPwX7gnbt3Ez88b/sH
f5j6kyziz+bleZ5o+sMfRnRsXLm2P/YqC58eTpnYY3Xq7Nknuv8Z/GcPP9A1
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
     "], {{0, 123}, {419, 0}}, {0, 
     255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{273.9562499999995, Automatic},
   ImageSizeRaw->{419, 123},
   PlotRange->{{0, 419}, {0, 123}}]], "Input",ExpressionUUID->
  "a1e31bec-7d80-4d9e-8fe5-29de6a4a23e9"]
}], "Text",
 CellChangeTimes->{{3.813655116733492*^9, 3.813655181041806*^9}, {
  3.813655291401093*^9, 
  3.813655291575708*^9}},ExpressionUUID->"1d5a4e22-b997-435a-9d08-\
354cb8f7f4f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "UnAvailability"}]], "Input",
 CellChangeTimes->{{3.8136551883163013`*^9, 3.813655188317865*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0d246f06-242f-4986-b658-6cdd05edb1b2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UnAvailability[ps,working] computes the \
unavailability \\nfor a system with state probability vector ps and a \
\\ncorresponding Boolean vector working, \\nwhere working[[i]]=True if i is a \
working state.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"UnAvailability", "[", 
                    RowBox[{
                    "Dependability`StateDiagrams`Private`ps_", ",", 
                    "Dependability`StateDiagrams`Private`working_"}], "]"}], ":=", 
                    RowBox[{"Dependability`StateDiagrams`Private`ps", ".", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"#1", ",", "0", ",", "1"}], "]"}], "&"}], ")"}], "/@",
                     "Dependability`StateDiagrams`Private`working"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"Dependability`StateDiagrams`UnAvailability\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UnAvailability[ps,working] computes the \
unavailability \\nfor a system with state probability vector ps and a \
\\ncorresponding Boolean vector working, \\nwhere working[[i]]=True if i is a \
working state.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "UnAvailability[ps,working] computes the unavailability \nfor a system \
with state probability vector ps and a \ncorresponding Boolean vector \
working, \nwhere working[[i]]=True if i is a working state.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Dependability`StateDiagrams`UnAvailability, {
      Dependability`StateDiagrams`UnAvailability[
         Pattern[Dependability`StateDiagrams`Private`ps, 
          Blank[]], 
         Pattern[Dependability`StateDiagrams`Private`working, 
          Blank[]]] :> Dot[Dependability`StateDiagrams`Private`ps, 
         Map[If[#, 0, 1]& , Dependability`StateDiagrams`Private`working]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Dependability`StateDiagrams`UnAvailability"], False]]], "Output",
 CellChangeTimes->{3.813655189285275*^9, 3.813905268379196*^9, 
  3.8139054930634613`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"2cbc7f10-8af0-4b0e-8c3a-87e4082e63bf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["Lab 4: Dependability modelling", "Section"]], \
"Section",
 CellChangeTimes->{{3.748577768899008*^9, 3.7485777720386457`*^9}, {
  3.8134848998550653`*^9, 
  3.8134849215777483`*^9}},ExpressionUUID->"5330313e-67f5-4d5f-bf89-\
bc82369850ab"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\nStudents: August Heltne-Karlson and Erik Tur\
\[OSlash]y Midtun",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.813484951115491*^9, 3.8134849734654837`*^9}, {
  3.813905297476457*^9, 3.8139053328371477`*^9}, {3.8139053866765833`*^9, 
  3.813905415619053*^9}},ExpressionUUID->"9da2f665-490d-4eff-958e-\
d59681e4f486"],

Cell[CellGroupData[{

Cell["\<\

System description\
\>", "Subsection",
 CellChangeTimes->{{3.813484951115491*^9, 3.8134849734654837`*^9}, {
  3.813905297476457*^9, 
  3.8139053328371477`*^9}},ExpressionUUID->"a08072db-6953-469f-b171-\
555db9b39121"],

Cell["\<\
In  this  part  you  are  going  to  develop  an  analytic  model  with  the  \
objective  to  study  the  dependability  with respect to airport \
availability and time until reopening of a runway after a snowfall.

In the modelling of the airport in this assignment you need reliability block \
diagrams and Markov models [see Chapter 7 in the textbook]. \
\>", "Text",
 CellChangeTimes->{{3.749532928223858*^9, 3.74953292964194*^9}, {
   3.749535846263382*^9, 3.749535884875477*^9}, {3.749542416345456*^9, 
   3.74954243796644*^9}, {3.7495425381266527`*^9, 3.7495425444249897`*^9}, 
   3.7495425836375732`*^9, {3.749550858137537*^9, 3.749550861472526*^9}, {
   3.7495509957151012`*^9, 3.7495509971111383`*^9}, {3.749551031146431*^9, 
   3.7495510600389547`*^9}, {3.749871142285858*^9, 3.749871278966557*^9}, {
   3.749871313716565*^9, 3.749871340504675*^9}, {3.749871377159594*^9, 
   3.7498713889720697`*^9}, {3.749875023914575*^9, 3.749875040578637*^9}, 
   3.750396451449823*^9, {3.7505749867496643`*^9, 3.7505750593173103`*^9}, {
   3.7505750987911463`*^9, 3.750575104989831*^9}, {3.7505751515033283`*^9, 
   3.750575175383738*^9}, {3.750575212002445*^9, 3.7505752222051783`*^9}, {
   3.751081633718532*^9, 3.751081634797975*^9}, {3.778485492125592*^9, 
   3.77848554671627*^9}, {3.778485861699012*^9, 3.778486070634254*^9}, {
   3.778486130824698*^9, 3.7784862147318077`*^9}, {3.778486307942775*^9, 
   3.778486556821888*^9}, {3.778486592398139*^9, 3.778486615488165*^9}, {
   3.7784866637587*^9, 3.778486715423601*^9}, {3.778486782386091*^9, 
   3.778486907372734*^9}, {3.778486944455278*^9, 3.778487094022985*^9}, {
   3.778487192052985*^9, 3.77848721661098*^9}, {3.778487330487521*^9, 
   3.778487421023901*^9}, {3.780027914035698*^9, 3.780027960913975*^9}, {
   3.780028803944859*^9, 3.7800288307909517`*^9}, {3.7800288723396063`*^9, 
   3.780028884062392*^9}, {3.7800289209245167`*^9, 3.780028924280815*^9}, {
   3.780028955827252*^9, 3.780028959820734*^9}, {3.7800296499245462`*^9, 
   3.780029649925561*^9}, {3.780029680959831*^9, 3.780029750680228*^9}, {
   3.780043460403771*^9, 3.780043754791533*^9}, {3.7801116009069567`*^9, 
   3.780111601856448*^9}, {3.7801136722016573`*^9, 3.7801136722044764`*^9}, {
   3.7814138307619553`*^9, 3.7814138433343143`*^9}, {3.8134716845597467`*^9, 
   3.813471705288158*^9}, {3.813471748734128*^9, 3.813471788333405*^9}, {
   3.81358510687772*^9, 3.8135851565454683`*^9}, {3.8135851871365023`*^9, 
   3.813585187716012*^9}, {3.813658625770026*^9, 3.813658629864222*^9}},
 FontWeight->"Regular",ExpressionUUID->"d16be30f-d1fe-4182-83e6-5897c1d42f32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 1: Model of two plowing trucks [warm-up, 0%]", "Subsection",
 CellChangeTimes->{{3.749042498297988*^9, 3.7490425179159737`*^9}, {
   3.749042569413308*^9, 3.7490425740704527`*^9}, {3.7490426387310133`*^9, 
   3.749042661718089*^9}, {3.749550875297207*^9, 3.7495509068745193`*^9}, {
   3.7495509576479187`*^9, 3.749550963690712*^9}, {3.780057065806892*^9, 
   3.780057070924839*^9}, {3.780631886953907*^9, 3.780631890530636*^9}, {
   3.781170968817202*^9, 3.781170975538426*^9}, {3.813471819000778*^9, 
   3.8134718688618507`*^9}, 3.813471913769288*^9, {3.813471959052652*^9, 
   3.813471969098988*^9}, {3.8134728527688026`*^9, 3.81347285464717*^9}, 
   3.813632901733204*^9},ExpressionUUID->"dc41825a-3b40-40a5-ac4a-\
ccdcf8ee7768"],

Cell[TextData[{
 "The  main purpose of this task is to apply the Mathematica add-on package \
\[OpenCurlyDoubleQuote]StateDiagrams.m\[CloseCurlyDoubleQuote] to obtain \
transient steady state probabilities, and metrics such as (un)availability, \
reliability, MTBF, etc.\n\nThe example is the part of the airport that \
consists of two plow trucks.  \nThe trucks might break down ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"intensity", " ", 
     SubscriptBox["\[Lambda]", "1"]}]}], TraditionalForm]],ExpressionUUID->
  "982d3b64-da75-4734-a9bd-d17337ae4faa"],
 ") and need to be repaired ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"intensity", " ", 
     SubscriptBox["\[Mu]", "1"]}]}], TraditionalForm]],ExpressionUUID->
  "eeafb049-8001-4a3d-b91a-85cc2597f367"],
 ").  \nIf both trucks have failed, no plowing can be conducted and this \
sub-system is down (with huge consequences when it starts snowing of  cause).\
\n\nFollowing the description of \[OpenCurlyDoubleQuote]",
 StyleBox["Matrix form\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 " in \[OpenCurlyDoubleQuote]",
 StyleBox["Section 5.2.4 Steady state solution\[CloseCurlyDoubleQuote] (also \
presented in the lecture and in the lecture notes from Nov 3) ",
  FontSlant->"Italic"],
 "of the textbook, we will get a set of equations on a matrix form. \n1.1. \
Define the system state variable(s) and corresponding events and make a \
Markov model of the trucks as described above.\n1.2. Define the transition \
intensity matrix of the trucks\n1.3. Define operation modus of the three \
states  (this means, available/unavailable,  up/down, working/failed)",
 StyleBox["\n",
  FontSlant->"Italic"],
 "1.4. Plot the diagram as defined - compare against the figure from 1.1 to \
check if you have implemented the model correctly (states, transitions, and \
intensities)\n1.5. Determine the transient and steady state probabilities \n\
1.6. Obtain symbolical expressions for transient (U(t),R(t)) and steady state \
measures (U,MTFF,MTTF,MTBF)\n1.7. Provide numerical values of the measures\n\
1.8. Plot the transient and steady state unavailability as a function of t - \
what do you observe? "
}], "Text",
 CellChangeTimes->{{3.749118935534384*^9, 3.749118976915328*^9}, {
   3.749119012116789*^9, 3.749119073057646*^9}, {3.749535115172143*^9, 
   3.749535135694593*^9}, {3.74953589741094*^9, 3.749535902224646*^9}, {
   3.749535954923235*^9, 3.7495360239881*^9}, {3.749536377071864*^9, 
   3.74953646207642*^9}, {3.749536966160037*^9, 3.749537012284511*^9}, {
   3.749537107714123*^9, 3.74953716020109*^9}, {3.749537193344142*^9, 
   3.749537201647791*^9}, 3.749550992397709*^9, {3.749551063375246*^9, 
   3.749551066475985*^9}, {3.780057076920362*^9, 3.780057210364949*^9}, {
   3.780631911771038*^9, 3.780632039164514*^9}, {3.813473788041666*^9, 
   3.813473863960026*^9}, {3.813473903178308*^9, 3.813474063941661*^9}, {
   3.813474467078328*^9, 3.8134746356322737`*^9}, {3.813474865686727*^9, 
   3.813474912395158*^9}, {3.8134833460593433`*^9, 3.8134833472730827`*^9}, {
   3.813483568529134*^9, 3.8134835721104803`*^9}, {3.813484804118616*^9, 
   3.8134848075961523`*^9}, {3.813658640217091*^9, 
   3.813658913377657*^9}},ExpressionUUID->"3e2799fd-e776-4288-a20e-\
690e2c89f7ec"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"1.1", ".", " ", "Define"}], " ", "the", " ", "system", " ", 
     "state", " ", "variable", 
     RowBox[{"(", "s", ")"}], " ", "and", " ", "corresponding", " ", "events",
      " ", "and", " ", "make", " ", "a", " ", "Markov", " ", "model", " ", 
     "of", " ", "the", " ", "trucks", " ", "as", " ", "described", " ", 
     RowBox[{"above", ".", "\[IndentingNewLine]", 
      StyleBox["state",
       FontColor->RGBColor[0.9688410772869459, 0., 0.04487678339818418]]}]}], 
    
    StyleBox[" ",
     FontColor->RGBColor[0.9688410772869459, 0., 0.04487678339818418]], 
    StyleBox["=",
     FontColor->RGBColor[0.9688410772869459, 0., 0.04487678339818418]], 
    StyleBox[" ",
     FontColor->RGBColor[0.9688410772869459, 0., 0.04487678339818418]], 
    StyleBox[
     RowBox[{"number", " ", "of", " ", "failed", " ", "trucks"}],
     FontColor->RGBColor[0.9688410772869459, 0., 0.04487678339818418]]}], 
   StyleBox[",",
    FontColor->RGBColor[0.9688410772869459, 0., 0.04487678339818418]], 
   StyleBox[" ",
    FontColor->RGBColor[0.9688410772869459, 0., 0.04487678339818418]], 
   StyleBox[
    RowBox[{
    "events", " ", "are", " ", "truck", " ", "failures", " ", "and", " ", 
     "repair"}],
    FontColor->RGBColor[0.9688410772869459, 0., 0.04487678339818418]]}], " ", 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.813474931475873*^9, 3.8134749611624327`*^9}, 
   3.813479958631959*^9, {3.813658931153391*^9, 
   3.8136589440088243`*^9}},ExpressionUUID->"68da65b6-ec7d-4316-b4b4-\
c5e52c1c4cd9"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4rcSc5x9bWCNjRJXO43bwbomwqH5PmgAAAAAANCI5qraSwySGCZxn8QjEgsd
bw3DxH6+/rvmvJ7wnzdcYqhEtcQpEm3yfOwAAABApjRP1cnx2rParr1X4mGJ
+Y63hmFiO1jneL0t8bizfzu4j+PlvwAAAAAAgF1fkZjpeLmsXY63X9dmiU0S
6yXWSayRWOv/+0f+f9/uP1/nfy2WON8h3wUAAIDw0Lld7zheezaxHazt3Q2O
1/5NbAdv8v/7NokaiT0SH0pckO8DBwAAAAAAjRwhcY7E9yUudLz++nckvu14
OaxvOd66Lef5//wdP74r8T3/7/S/HZ3vAwcAAABaQffj0jbvDxyvXZtqO1if
p+3m7/v/TDsYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKTPG
HCRxuMSxEh+XOFLiEPlPbWwfGwDAcS6ScrpDhw4fa2/M0RUVFceXl5cfV1ZW
dlQ7KbvbSnktZfYBto8RAMJMy1GJw4xfzuqj/++UrwCQfW3atWt3sLZlO3Xq
dExD+1bbuvr/tW/f/lBt/zr8JgEAAFCSjPd756mxWOxHEn+WuEn+vYfEIImx
1dXV0yQWSCyXf98gsVWiRqJewm0m9khsl/hI4gP5+9clXpB/niBxj0Rvea8K
ib9JXBKNRr+qvw/Y/jwAIE/aaN6pqqrq85XGfEXKwAsjxvxKysPfR435uzx2
iklZLDFQys7R8viExPPyz7Mk5ss/L5bHN+RxqZbPMa+cXS+Pm+VxhzzuqZay
OJWQ59bL39RK7JLYJrFJ/r8NEmvkn9+XeFX+ebZfH0yUf35AHodK9JN/7ibH
Wy7H214e/yrncJmcyw/1nCorKz+tvznY/qABIAVtpB16opRf35bH32mZZjz9
JUZJTJIyb47EO/LP6yQ2S+yU2NtCe3iv/zx9/jr9e30dfT3/dfX1jf9+v/Pf
/0SH32kBhFDbtm0P1NxTuTEnS3n29SpjfiDl268l/ijtxBvi/X9jeko5eHdD
+1Z/I5DHufqbgzy+Jo9vyeN78rjSb4tulMet2k6Vx72ptm/9qNM2scRObePK
40cSqyTellgo8ZLEVInHJMZI3CPPGyDRS443IvEvPXZto8v5fDcSiXzpZimj
ad+iWMj1/TNpd/SVa/4ugiCIQg8tr7Tcsl12ojB07NjxCLkmzpO4RqKnxBiJ
l+RaWZ1C3iqvIce0SWKR/PNj8jhAHv8t1/JP/L4/ABSsG4w5UvrBZ/h9+ysk
Okg51kv6zvfJ4zNatsk/L4uXc9L/TrO/Ht7wcmiak3tFPwf9PUHbKvLYRT6j
f0r8n3xm55cZ8zl/PC4AZJ3+DivtyTO1zJHHiJRDw+VxarWXw6qx3QYORI1/
XFP944z4x32mnoftzxJA6dDxWRVS9iS0b/+jOSuJe6V8muyPwVotj9uttznz
277d5Y83e10en5XHhyTuiBpTKZ/RtRFjLpXP7Dwd20Z+DIXIz3XZbu8QBEGk
HeS8Sk4bHXMk3/1Vxhs39bg8vmcKLKfVitgg5/ScPA7U30jl8Xu6TpftDx1A
cdM+qvTzz5J+60+l7PmT9GPLqr25TZq3eU7HiMZzOqYA+t7hjzr5LD+UmK91
mHy2g+TzjklcJ5/9xTpvTNeqsX1NAChslZWVn/LnFEjxHZ9HtdAUXk4r06jx
z2eUv1bCr/V8bX/mAMIlPhfLmJOlfftjKUf+Es/TGNNf2l/jqr05V7qGwI4C
aBsWR3jjenVthikSw+Qzr9bPXcf26ni5a4w5zPY1gdIi7Yi+BdCmIQiCyCT6
2i5DkTvy/X5cf/+TdlNnHVtlvLVSbF9zeQ0571p5nCdxp/HyfKfb/l4AhE8H
KU+j0ei3pK9/pfb3dTy9P1ZzZXy9P1MA/WTi/4eub+OvQTPKnyf2F11HUcfQ
GvbMAUqK3POH6DqAOudAyuwHJd633T611CZ+X89fPwd/XcRDbH83AOzSPa0q
jfmGlAu/lbi52ltHUOdkLU1n7Wsib+3bdRLzJB6Jj63z1kH4RSQSOe0i1kBA
lvlrg+W9vUIQBNHa0PLLdhmK7PH3wP6dfK9D5fHtbF4rt9xyiztw4ED3vvvu
c8ePH+8++eST7vTp091Zs2a5CxcudN966y132bJl7sqVK90PPvjAXbt2rbth
wwZ306ZN7tatW91t27a5mzdvdjdu3OiuW7fO/fDDD91Vq1a5y5cvd5cuXeq+
+uqr7ty5c93nnnvOffrpp91HH33UHT16tDt06FC3d+/e2b7u1xtdg9vbC+Es
298bAPukLDigqqrqCzqGVecKSTlxS8zbo3B+fM8rY7Vvq/tnbfHX/Fvsj6nV
/QxG+/t33eLvkfUP3SPLn2N2pf52IefzGx33oHPP4vkeYy7QvJ3+tiGPX9bx
ojp2V879szr+X/fU0nUD9f+TOF3nrenzdI8FiXP1N1J9DV2zRj8rXYvFX7vm
2qi3vmyFHE93Oa7bdWxq/LdVb8+D6dX+3jb+3gj2coTV1burvb0fntZxyvq5
yXlcxPwHoDgYL7/1Q3nsJvGSyeK8ra5du7p33HGHO2LECHfMmDHuY4895j7z
zDPuzJkz3fnz57tLlixx33vvPXfFihXu6tWr3TVr1rjr1693P/roI3fLli3x
9rA+6r/r/6//XZ+nz9e/07/X19HX09fV19f30ffT99X3z2KbuMb/fLr5nxf5
L6AIdTTmk9rO0baattH8ttlc3YvVcvt2rxzLRs3F615Z/poIumfB/f661j10
v1rdt1biGn+PL90/8f/89ucv4u32aPT70i79jrZTpX37NV3PRtuw2q6XNu1n
9Px1Ty1t3+r/J//tVF1/UZ+ne4T7beKGNu735DV/ru+h7ydxfXx9Rq9921Wi
j58THCnHN8Ef+6brka+I7yFm8fPUcb7+vmOTtH2r7XLdV0zb+heRC0MGgvmu
u+66y33iiScIgiAKLrR8It9VPHQNLfkef6y/dRpvDlPG6xJ27tzZ7d+/f7xP
PWXKFHfOnDnxHJb2w3ft2uXatnfv3niuTH8LWLBggTtjxox4TmzIkCFu9+7d
W9Xf1/kZ8niPtGN/X1FR8Qnb3yuA3NK+rtzvl2gf2p//o/tR1+Sxf7/ZX69k
up+z6i3HcpPfr75E+9ra/+5kzEmdOnU6Rg65je3PLNs0v6hjNPT3hvj+3t7v
Fn+Wvvl//XzZIF0vRx5n6p7keft+vD3PZ+q4ET0WzRXq9eIU4XcAFBPNy0u5
cqPcu0/K4/bWtAtvu+02d+TIkfGxXZp3eu211+LjuXT8Vn19vdX2sL6/Hoce
jx6XHp8epx6vHncr81/b/c/vRv08bX+nANKjbcb4uCZj2sXH80g7U+cD5bN9
K/GmlCMz/Jya7hl/sxzPVZqb0pyU5pjiOaiOHY+w/XnlguaVbjLmBM0x6fgy
P3d2heae/FzjcH/M2suaI4uPwcrPd7NH4jXdQ0zXAZfjuly/i3bt2h1s+zND
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
D/T3AVuaYX/ydfnb/rrOfYcOHT5m+5yKFfkuAGFBvit3pH38ZflMn2iuT9ez
Z0936tSp7pYtW2xfCsix2tpad8GCBe7AgQNbynstlbjS9vULNEXKtq9KX+Jm
qS+mSezOoO//tvzdUB2Pp3NYbJ8PEEb6W3DEmMvlXhog99TidH+Hi+8tonsr
yH3IfArkkrRpjpZr7RaJHc21fx566CF3+fLltptryAP9nvX7biHvtUOvG8P+
XsgjzUlJvXit1o/prsMdr4erq1+Vxzt1/e3KyspP2T4fIIx0vpY/xuvODMd4
7ZSYpOt7M5Yyu8h3AQgL8l3Zp21bHccln+fepvpwvXr1cp9//nm3pqbG9iWA
PKuvr3ffeOMNd9CgQS3lvWbrmELb1zOg66BJn6OtlGvDde2IDPocS+Rv75Y+
x5W6hrvt8wGK0U3GnKD3WHyP+zTvU3/u1/O6vzh7IiBbpB1zkMQNEuuaW99A
135ev3697eYZLNDvXb9/vQ6aaQ+v86+jg2xf0yg+bY05JGLMT6UO7K25qgza
uDp/6w55jf9l7AiQG9p/lDbqVboeSHzPuzTv0/i64NXV/aQ/+7P27dsfavt8
wox8F4CwIN+VPTpvWj7DSHPrtOiadjNnznR3795t+6tHAXjrrbfi+7W1ML51
XCQSOc329Y2S0qbKmPOkTxCV6+9F/S08zT7Fas2N6djWjsZ80vbJAKVI55jL
PdxB7t+ndZxrur8L6G9/Ug78gHUPkQlpv1wq19EbzeW5HnnkEXfDhg22m2Io
AHod6PXQXN7Lv54utX1tI/zKysqO0jaq1HMPyHW1Jc381laJCfL3fy835mTb
5wKUIh2bpft/yb34SAbzMLdLPCZ//zfGYaaPfBeAsCDflRVt5LO7WseaNNVH
0z2aX3zxRXfPnj22v3IUoLffftsdOnRoc3383fLYt7y8/DjbFzuKU7t27Q7W
MW/+Plyr0/xtfLf0G6ZL379M9x+2fS4A9neNMYf59/dtEovSvL83Styvczx1
vz7b54LCFo1Gv6lr3TaX55owYYK7ceNG200vFCC9LvT6aCHvNU2vM9vXOsJF
x19JO/U6uX6elDZrTZq/jy+U6Bkx5iJtL9s+FwD7SL1wgNQJ35J2aoWuVSD3
eG0a93Z9TNfUMaa8wpizbJ9LGJDvAhAW5LtaR/exkc9sVlN9su7du7szZswg
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
IzlXE2ktpI2Ua+9AOnnboEGDonuvrl692qmsrLSdguYVfT30ddHXR1+nNPNh
fR9Guu9LE9ufEaAQ6LxYyVevdPcB6625rLQ9GcyPD0qb795f1kXym7ul/bSd
MV8y7L/ne3qvlo53dD0Dd97XU7qvhrTNGcyPD0fv8zVmgH5+Soy5mrW7/Y16
FwC/oN7lT/JeXeCu7/KatGPpjEl17cOnnnoqug+V7v21f/9+2x/DnNF9zvSe
N12PRdd/7NmzZ1rjefcaWSY/O0n7tu3PAVCodKykYyZ33mE/uS6nR/dCytT4
7JOx/kd676a7Fr3ugXBPyJgb2xvzZdaiyw8PGnNuqTHfk8/CHdJKo/OTjXnL
3b+9JsOfiWrdL1vaS9I6ymfhNt1z3vZrABQqycWayXX/a/n5tLSP0s3pHnvs
Mefll1923n33XWf79u3RvVoLgZ6nnq+et56/vg7pvnbu6/20+/qz9hSQJ/Te
db0PTPKUzrq+d0bWmzu+jnFE2nL38R/Ve9n1fnnJzf+tqKjos7ZfA9SOlfQ+
vXA4fJ1bEzXShuu9fNH1AzP/mTjsPvZj8nx/luf9VnPmPwQO9S4AfkG9y/9M
7X1fd8l794r8rKjHeDV6X5Ou36dzOvVep61btzrHjh2z/fGsNx3Hf/TRR87y
5cud6dOnOy+++KLz+OOPR9d6rMfrUyOv7bvyM6T7qtl+vwEk1Fiu0StkzP1f
WouQNlbr0zonIONjuk9qH5u1Hibju3Hu+K5Env9PuieZxgv2Das/va9P91eX
8fL10XvujLlfa44R/X7VmEnu2oP7svTefrz+5UR3H7g/6RzYNm3anGL7dQEQ
n95XJNfqz+XnQI3N9cmHdR3roUOHOhMmTHDmzZsXnSPl931x9fj1PPR89Lz0
/NJZr9szTtzsrkGlrzPfYwI+UVJS8nldp1ByqbbuvKA52cyhonPQJAfX/Z3k
5zD3/rC/S378H6XGfEePx3CPWL3dZUwzzZHl9WwerWVFIu3kde7vzsd6x113
INNzvj5+b4/qOgnufuW6rsFvdS165gEWBupdAPyCelew6NpN8j7eqN8Jys/5
Wqupz3hWm9aG+vXrF70PSu8F0z2ttH60bdu2vFgDRvcl2717t7NmzRpnwYIF
zptvvum89NJLzuDBg6NrONb3vN3rYKOpXcP8Dvn5OdvvK4D60/mNut6LjAlv
lzFhRMZoI7VWouvHZ61W8ulx4UGdA+uuMzM6UvtdbGedC6v7lMnPX+me5Dpu
dff/C+J+CY219qf3QuncX12f0l1j8E53jN4nUrs22dvyc0U27tVL2Gr3yNb3
pr8cy191Hqyu8WL7BQPQMBr3JYd7QK7tCfLzYEPywh49ejjDhg2L1ot0jQDd
12rjxo3RNRJs3xOmz6/Hocejx6XHp8epx6vH3ZDzNrX9l75+D+jrafs9BZBZ
RcZ8QfKxmyUfeyC6rrcxM6JrG+QmP67SMbe7l9ME+fmMrsuo9+rL8dyrebuu
nyix5yo5zgv1ew7br1e26D1xoVDoEq0Fynn/QmtY7nvSSccN0sa4axfoety7
cvX+SPvQnT9YruseFhvzDdYjLGzUuwD4BfWuYCsuLj5H73WQ9/YJaSsaOOb9
VOvataszYMAA59lnn3XGjBkTHVu/8cYb0X3CFi5cGK2N6XxSHX/rvmG6bsqu
XbucPXv2RMflBw4ciO6dpTWrHTt2RO8p27Rpk7N+/Xpn1apVzvvvvx+di/r2
2287kyZNitay9B60IUOG1GsdwiRtl7Tx0u6X9jXb7xuA7NN5iDofUWLkrdF9
u2rH+ToPdW10DJ6DsWQd4/+dOsZ0vwPQWswrbp1O9y97xK2XFUtrHV0zRMag
WjeTdlM4HL4hunZJOPz96Lr84fC39HtKOdevRWtqxnxZv994yJgL2hrzOd3/
XP8/vTdOx7H69zrelp8/lJ8/0cfUsbeuWaXr92mf4s4l/V/5eZ+09u59VwPk
53Py81/u+pJ6/9V6+bm3TO+Fs/R6ltXmNtulzXbXceng3q91fUlJyfm2P4cA
sk9yu5M0Nmrs1Fgg/7syUzlkx44dnb59+0bvm3rhhRec8ePHO6+99lq07qTr
Bera4WvXrnU2bNjgbN68OTpvbOfOndF1CPbt2+ccPHgw+lP/t/7/+nv9O/17
ndOl/14fRx9PH1cfX59Hn0+fV58/g/mwvi6z9HXS10tfN9vvHYDcc+8Hu0nr
Tnqfu9Y8JH9amNP5SPHzuQNyDOvk5yJpM+W/p0h70a2VDXDvyS+T9mB0DpPk
q3pPmdb03NrZ9TrnStfBLjHm29K+qbmvjgd0HUjdm0xra5ofa46oObKuCSg5
8mW6H2x0v7TavPpaN8/WfPsGfa30/jldR1JzzOiew7XzuTq6e8cOkTZC83k3
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
X8+InKM8Azaml8+6VjZPkSp9v31+zP3DPXvX580a7/U+03Zghd9X5rtgvhNW
nq/lO2OHRP6ixjo9od4FAAAAAOg0z+76e7Xe6fLe1j0J3XfQ867dc3+6sub1
lHK/61qX+7C4D8lXlb1NGmdUvd+epOxV+FPlXa+ni897Hde9PO+rP/tl6l0A
AAAYrsZHvqyc0eX6k+tOpyj7+vV23sv1LdfKPENrd+V9q964nrWzssd4453e
v/fuyPaq14PQZ9juU2vd7DblTN9OvWtT7wIAAAAAdJpnBlyi1nqX95vHK2th
njfgve3fRY5R9jX03S2fE/Xe2Xt23+dq35t6T+19vvseuofh0cWaB0c2iSym
amdVZ4d6FwAAAIajhSJ7KfsbNHqDHxdZWTn/tjd+n3X/hZ9Ebo/sWuEzfrf+
uvJsWuOd/q3IFZH1ajz7WOUMsBmldVyT8n7BfcjL7+8+u+Yzb6uq3v0xo94F
AAAAAOi0Sco9eLmXoffJWxXf957We273KfQ+ekLxX+/jfTa1tz2pe7C4brao
sra2sDpTk6LeBQAAgOHG9aLtlPeh3C/8JeW5rxWU78VV19hb2U/h0eJ/92aS
us7ucg3JM7eWr/z03c/u8nv2GZEl237WfQ+/HzlJWcurM5OXehcAAAAAoJO8
594o8q5a+578PrLEED5XFdS7AAAAMJz4LJjfUd272zNsZyprUK431anj+N7U
UZFnIndFtu3l511n+kzkarX2IHQ/8cNVr4e49waes9vb7K4FlH0bPMf3yuL3
U+8CAAAAAAwF39vy2dHuZnf9TMN/r0m9CwAAAMOF30HdN9Cza33H6oXIuZHV
Vf+92ufOzla+316t3vsRuva0k1pndznu4eC+4lV6KJrPwu2hPPv2UWkd91R0
zW106WcnRc6JvBK5SHl/rU6vcupdAAAAAIBO8X7UPQbbZ3e558o/DuFzVUW9
CwAAAMOB60Sua12grP/4XtW3lHNw69Zv/I6+TuTayKvKfoEr9/KZ7mZ3OQ9H
9lT1OtSykX9S3ksrr+P7W2u2rTMlcqOyrneqsm95HdS7AAAAAACd4v2q97Tu
T1Ke3TVDzdldw5mf8W41612ex+16V9XzqwAAAEB/uYffSsq7TrOUfcJ/EzlA
eT5rswrZMrJNZMfIPsp7YU8qz6GdqKxn9WQ5Zd/EN9Vap5oe2UvV6l3uVei7
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
1gUAAAAAAAAAAAAAAIBB9f9vSotk
    "], {{0, 445}, {1724, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{479.2431249999995, Automatic},
  ImageSizeRaw->{1724, 445},
  PlotRange->{{0, 1724}, {0, 
   445}}]], "Input",ExpressionUUID->"702aaebc-2af9-4ac7-b964-c462d512b4c2"]], \
"Text",
 CellChangeTimes->{{3.813480195790963*^9, 3.813480208638015*^9}, {
   3.813480337441983*^9, 3.8134803877949266`*^9}, 3.813480597261675*^9, {
   3.813480810391143*^9, 3.813480820576696*^9}, {3.813658961242669*^9, 
   3.8136589677600203`*^9}, {3.813659290305057*^9, 
   3.81365930709658*^9}},ExpressionUUID->"05450db2-e1ed-427d-9bdd-\
0b0137c754b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"1.2", ".", " ", "Define"}], " ", "the", " ", "transition", " ", 
    "intensity", " ", "matrix", " ", "of", " ", "the", " ", "trucks"}], 
   "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "initialise", " ", "an", " ", "empty", " ", "3", "x3", " ", "matrix"}], 
   " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalQ]", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"\"\<,\>\"", ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "assign", " ", "intensities", " ", "to", " ", "all", " ", 
      "transitions"}], ",", " ", 
     RowBox[{
      RowBox[{"null", " ", "to", " ", "non"}], "-", "transitions"}]}], " ", 
    "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalQ]", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
     RowBox[{"2", 
      SubscriptBox["\[Lambda]", "1"]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"assign", " ", "failure", " ", "rate"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalQ]", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "3"}], "]"}], "]"}], "=", "0"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"non", "-", "transition"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalQ]", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
     SubscriptBox["\[Mu]", "1"]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"assign", " ", "repair", " ", "rate"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalQ]", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "3"}], "]"}], "]"}], "=", 
     SubscriptBox["\[Lambda]", "1"]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"assign", " ", "failure", " ", "rate"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalQ]", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "1"}], "]"}], "]"}], "=", "0"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"non", "-", "transition"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalQ]", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "2"}], "]"}], "]"}], "=", 
     RowBox[{"2", 
      SubscriptBox["\[Mu]", "1"]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"assign", " ", "repair", " ", "rate"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[ScriptCapitalM]", "1"], "=", " ", 
     RowBox[{"SetDiagonal", "[", 
      RowBox[{"Transpose", "[", "\[ScriptCapitalQ]", "]"}], "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"add", " ", "the", " ", "diagonal", " ", "elements"}], ",", " ", 
      RowBox[{"see", " ", "Sect", " ", "5.2", ".4"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalM]", "1"], "//", "MatrixForm", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{"Print", " ", "nicely", " ", "on", " ", "matrix", " ", "form"}],
       " ", "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.813479901057044*^9, 3.813479906849391*^9}, {
   3.813480636103776*^9, 3.81348066125807*^9}, {3.813480692633965*^9, 
   3.813480773334085*^9}, {3.813480841092259*^9, 3.813480878084305*^9}, {
   3.813480914222032*^9, 3.8134809717033663`*^9}, {3.813481172519731*^9, 
   3.813481294718193*^9}, {3.8134818803836718`*^9, 3.81348192273977*^9}, {
   3.8134819956492147`*^9, 3.813482018495034*^9}, {3.8134821069981318`*^9, 
   3.813482112997149*^9}, {3.813509244890929*^9, 3.8135093123402357`*^9}, {
   3.813659338086102*^9, 3.8136594168531637`*^9}, {3.813659470520949*^9, 
   3.8136595227384787`*^9}, 3.813906291911707*^9, {3.813906322036077*^9, 
   3.813906355952388*^9}, {3.8139065349964123`*^9, 3.813906549519451*^9}, {
   3.813906721453114*^9, 3.813906727219358*^9}, 3.813906840370049*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"c9a83d1f-821d-461b-b64b-a8a0822e3e90"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SubscriptBox["\[Lambda]", "1"]}], 
      SubscriptBox["\[Mu]", "1"], "0"},
     {
      RowBox[{"2", " ", 
       SubscriptBox["\[Lambda]", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Lambda]", "1"]}], "-", 
       SubscriptBox["\[Mu]", "1"]}], 
      RowBox[{"2", " ", 
       SubscriptBox["\[Mu]", "1"]}]},
     {"0", 
      SubscriptBox["\[Lambda]", "1"], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SubscriptBox["\[Mu]", "1"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.813480964133807*^9, {3.81348120646662*^9, 3.8134812365439377`*^9}, {
   3.813481274722661*^9, 3.8134812950821857`*^9}, 3.813481655703658*^9, 
   3.813481923332465*^9, {3.813481993403949*^9, 3.813482019447887*^9}, 
   3.813482115080476*^9, {3.813509248668459*^9, 3.81350931305621*^9}, 
   3.813512131180026*^9, 3.813545630223394*^9, 3.8135513389065247`*^9, 
   3.8136411754099407`*^9, 3.8136412164790897`*^9, 3.813641266969915*^9, 
   3.813654593127326*^9, 3.813659529809988*^9, {3.813906276201591*^9, 
   3.8139062938451138`*^9}, {3.813906837604958*^9, 3.8139068419373837`*^9}},
 CellLabel->
  "Out[98]//MatrixForm=",ExpressionUUID->"4dc98967-2465-4427-b4eb-\
6475dbd2b90e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"1.3", ".", " ", "Define"}], " ", "operation", " ", "modus", " ", 
    "of", " ", "the", " ", "three", " ", "states", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"True", "=", 
       RowBox[{"up", "/", "working"}]}], ",", " ", 
      RowBox[{"False", "=", 
       RowBox[{"down", "/", "failed"}]}]}], ")"}]}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[ScriptCapitalL]", "1"], "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Ok \n[1]\>\"", ",", " ", "\"\<1 down\n[2]\>\"", ",", " ", 
       "\"\<Both down\n[3]\>\""}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"labelling", " ", "states"}], " ", "-", " ", 
      RowBox[{"alternative", " ", "to", " ", "just", " ", "1"}]}], ",", "2", 
     ",", "3"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[ScriptCapitalW]", "1"], "=", 
     RowBox[{"{", 
      RowBox[{"True", ",", " ", "True", ",", " ", "False"}], "}"}]}], ";"}], 
   "  "}]}]], "Input",
 CellChangeTimes->{{3.813479912774192*^9, 3.813479917559359*^9}, {
  3.813480994804291*^9, 3.81348109840269*^9}, {3.813481873498674*^9, 
  3.813481875461372*^9}, {3.813659542181238*^9, 3.8136596084869337`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"fa11d67d-4f1c-4e01-acb2-0f1631d162bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"1.4", ".", " ", "Plot"}], " ", "the", " ", "diagram", " ", "as",
      " ", "defined"}], " ", "-", " ", 
    RowBox[{"compare", " ", "with", " ", "figure", " ", "above"}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotDiagram", "[", 
   RowBox[{
    SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
    SubscriptBox["\[ScriptCapitalW]", "1"], ",", 
    SubscriptBox["\[ScriptCapitalL]", "1"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.813479923975568*^9, 3.8134799291357203`*^9}, {
   3.813481120958324*^9, 3.813481148655349*^9}, 3.813481283846116*^9, {
   3.8134813156178427`*^9, 3.813481336539914*^9}, {3.813481858389345*^9, 
   3.813481865777308*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"07088672-955e-45bb-aba0-2972ba11ce27"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
     {Arrowheads[{{0.05, 0.8}}], 
      ArrowBox[BezierCurveBox[{{0., 0.}, {0.5001527564386761, 
       0.1644909859489427}, {1.0003055128773508`, 4.665773677819736*^-18}}]]},
      InsetBox[
      RowBox[{"2", " ", 
       SubscriptBox["\[Lambda]", "1"]}], {0.5001527564386753, 0.0700213859014146},
       ImageScaled[{0.5, 0.5}],
      BaseStyle->"Graphics"]}, {
     {Arrowheads[{{0.05, 0.8}}], 
      ArrowBox[BezierCurveBox[{{1.0003055128773508`, 
       4.665773677819736*^-18}, {0.5001527564386753, -0.16449098594894232`}, {
       0., 0.}}]]}, InsetBox[
      SubscriptBox["\[Mu]", "1"], {0.5001527564386753, -0.0700213859014146}, 
      ImageScaled[{0.5, 0.5}],
      BaseStyle->"Graphics"]}, {
     {Arrowheads[{{0.05, 0.8}}], 
      ArrowBox[BezierCurveBox[{{1.0003055128773508`, 
       4.665773677819736*^-18}, {1.5001527097553522`, 0.16439049306400907`}, {
       1.9999999066333527`, 4.956174529136317*^-18}}]]}, InsetBox[
      SubscriptBox["\[Lambda]", "1"], {1.5001527097553518, 0.06997860756292018},
       ImageScaled[{0.5, 0.5}],
      BaseStyle->"Graphics"]}, {
     {Arrowheads[{{0.05, 0.8}}], 
      ArrowBox[BezierCurveBox[{{1.9999999066333527`, 
       4.956174529136317*^-18}, {1.5001527097553498`, -0.1643904930640094}, {
       1.0003055128773508`, 4.665773677819736*^-18}}]]}, InsetBox[
      RowBox[{"2", " ", 
       SubscriptBox["\[Mu]", "1"]}], {1.5001527097553518, -0.06997860756292018},
       ImageScaled[{0.5, 0.5}],
      BaseStyle->"Graphics"]}}, 
   {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], DiskBox[{0., 0.}, 0.15], 
      {GrayLevel[0], InsetBox["\<\"Ok \\n[1]\"\>", {0., 0.}]}}, 
     InsetBox["\<\"Ok \\n[1]\"\>", {0., 0.},
      BaseStyle->"Graphics"]}, {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      DiskBox[{1.0003055128773508, 4.665773677819736*^-18}, 0.15], 
      {GrayLevel[0], 
       InsetBox["\<\"1 down\\n[2]\"\>", \
{1.0003055128773508, 4.665773677819736*^-18}]}}, 
     InsetBox["\<\"1 down\\n[2]\"\>", {1.0003055128773508, 4.665773677819736*^-18},
      
      BaseStyle->"Graphics"]}, {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.8499999066333528, -0.1}, {2.1499999066333526, 0.1}], 
      {GrayLevel[0], 
       InsetBox["\<\"Both down\\n[3]\"\>", \
{1.9999999066333527, 4.956174529136317*^-18}]}}, 
     InsetBox["\<\"Both down\\n[3]\"\>", {1.9999999066333527, 4.956174529136317*^-18},
      
      BaseStyle->"Graphics"]}}},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{487.359375, Automatic}]], "Output",
 CellChangeTimes->{{3.813481281070793*^9, 3.81348129867342*^9}, 
   3.813481664673481*^9, 3.813482025087448*^9, 3.813482121046028*^9, {
   3.813509278861239*^9, 3.813509318262196*^9}, 3.81351213546257*^9, 
   3.813545635206394*^9, 3.813551339066868*^9, 3.813641175495278*^9, 
   3.813641216586727*^9, 3.813641267129654*^9, 3.81365459320155*^9, {
   3.813659583655027*^9, 3.813659611659368*^9}, 3.813907155603671*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"e0b5065f-0b58-4426-8154-34602d5fe8b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"1.5", ".", " ", "Determine"}], " ", "the", " ", "transient", " ",
     "and", " ", "steady", " ", "state", " ", "probabilities"}], " ", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"transient", " ", "probabilities"}], ",", " ", 
    RowBox[{"defined", " ", "a", " ", "function", " ", "of", " ", "t"}]}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"ProbTransient", "[", 
      RowBox[{
       SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "x"}], "]"}], " ", "/.",
      " ", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", " ", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"show", " ", "the", " ", "funtion"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"P", "[", "t", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"steady", " ", "state", " ", "probabilities"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["PS", "1"], "=", 
    RowBox[{"ProbStationary", "[", 
     SubscriptBox["\[ScriptCapitalM]", "1"], "]"}], " "}]}]}]], "Input",
 CellChangeTimes->{{3.813479935520343*^9, 3.813479940914527*^9}, {
  3.8134813678836813`*^9, 3.8134814536871433`*^9}, {3.813481526891453*^9, 
  3.813481641118178*^9}, {3.813481677557411*^9, 3.8134817074223824`*^9}, {
  3.813481828363996*^9, 3.8134818536613197`*^9}, {3.8134821559434357`*^9, 
  3.8134821628902884`*^9}, {3.813482202685734*^9, 3.8134822118861113`*^9}, {
  3.813482289760057*^9, 3.81348241735664*^9}, {3.813482511945415*^9, 
  3.813482539621978*^9}, {3.8134846123736677`*^9, 3.813484614691074*^9}, {
  3.81354562145893*^9, 3.813545621926008*^9}, {3.813659636541177*^9, 
  3.813659641326174*^9}, {3.8136606588891897`*^9, 3.8136606666530247`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"49b416c1-4c8e-4f68-adbf-ecb9cb95a874"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "t", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Lambda]", "1"], "+", 
         SubscriptBox["\[Mu]", "1"]}], ")"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Lambda]", "1"], "+", 
             SubscriptBox["\[Mu]", "1"]}], ")"}]}]], " ", 
         SubscriptBox["\[Mu]", "1"]}]}], ")"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "t", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Lambda]", "1"], "+", 
         SubscriptBox["\[Mu]", "1"]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Lambda]", "1"], "+", 
           SubscriptBox["\[Mu]", "1"]}], ")"}]}]]}], ")"}], " ", 
     SubscriptBox["\[Lambda]", "1"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Lambda]", "1"], "+", 
            SubscriptBox["\[Mu]", "1"]}], ")"}]}]], " ", 
        SubscriptBox["\[Mu]", "1"]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "t"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Lambda]", "1"], "+", 
            SubscriptBox["\[Mu]", "1"]}], ")"}]}]]}], ")"}], "2"], " ", 
     SubsuperscriptBox["\[Lambda]", "1", "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8134814433768873`*^9, 3.813481454786888*^9}, {
   3.8134815342637177`*^9, 3.813481643015769*^9}, {3.81348167993705*^9, 
   3.813481708310601*^9}, 3.8134817980757513`*^9, 3.8134820303915453`*^9, 
   3.8134821277470207`*^9, 3.8134821650083723`*^9, 3.813482213589849*^9, {
   3.81348229359568*^9, 3.8134823096216993`*^9}, 3.813482364133747*^9, {
   3.813482531761306*^9, 3.81348254022217*^9}, 3.813484615150372*^9, 
   3.813512137488716*^9, 3.813545636769985*^9, 3.813551339148665*^9, 
   3.813641175507454*^9, 3.81364121665731*^9, 3.8136412672099943`*^9, 
   3.813654593280632*^9, 3.813660600621829*^9, 3.8139078937765713`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"1442edd1-9eea-48b2-904a-f0ba623403ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SubsuperscriptBox["\[Mu]", "1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SubscriptBox["\[Lambda]", "1"], " ", 
     SubscriptBox["\[Mu]", "1"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]], ",", 
   FractionBox[
    SubsuperscriptBox["\[Lambda]", "1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], "+", 
       SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8134814433768873`*^9, 3.813481454786888*^9}, {
   3.8134815342637177`*^9, 3.813481643015769*^9}, {3.81348167993705*^9, 
   3.813481708310601*^9}, 3.8134817980757513`*^9, 3.8134820303915453`*^9, 
   3.8134821277470207`*^9, 3.8134821650083723`*^9, 3.813482213589849*^9, {
   3.81348229359568*^9, 3.8134823096216993`*^9}, 3.813482364133747*^9, {
   3.813482531761306*^9, 3.81348254022217*^9}, 3.813484615150372*^9, 
   3.813512137488716*^9, 3.813545636769985*^9, 3.813551339148665*^9, 
   3.813641175507454*^9, 3.81364121665731*^9, 3.8136412672099943`*^9, 
   3.813654593280632*^9, 3.813660600621829*^9, 3.813907893796852*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"8eb9d81b-0cc9-421d-8b3c-2577a2f14dac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"1.6", ".", " ", "Obtain"}], " ", "symbolical", " ", 
    "expressions", " ", "for", " ", "transient", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"U", 
       RowBox[{"(", "t", ")"}]}], ",", 
      RowBox[{"R", 
       RowBox[{"(", "t", ")"}]}]}], ")"}], " ", "and", " ", "steady", " ", 
    "state", " ", "measures", " ", 
    RowBox[{"(", 
     RowBox[{"U", ",", "MTFF", ",", "MTTF", ",", "MTBF"}], ")"}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RelFunc", "[", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
     SubscriptBox["\[ScriptCapitalW]", "1"], ",", "t", ",", "1"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"reliability", " ", "function"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MTFF", "[", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
     SubscriptBox["\[ScriptCapitalW]", "1"], ",", "1"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Mean", " ", "Time", " ", "to", " ", "First", " ", "Failure"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MTTF", "[", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
     SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Mean", " ", "Time", " ", "To", " ", "Failure"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MTBF", "[", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
     SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Mean", " ", "Time", " ", "Between", " ", "Failures"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Unavailability", ",", " ", 
     RowBox[{"U", 
      RowBox[{"(", "t", ")"}]}], ",", " ", "U"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U", "[", "t_", "]"}], ":=", 
    RowBox[{"UnAvailability", "[", 
     RowBox[{
      RowBox[{"P", "[", "t", "]"}], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"transient", " ", "U", 
     RowBox[{"(", "t", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"U", "[", "t", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Check"}], " ", "assymptotic", " ", "behaviour", " ",
       "of", " ", "U", 
      RowBox[{"(", "t", ")"}], " ", "when", " ", "t"}], "\[Rule]", 
     "infinity"}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"U", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", "\[Rule]", " ", "Infinity"}], "}"}], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], "+", 
        SubscriptBox["\[Mu]", "1"]}], ">", "0"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"UnAvailability", "[", 
    RowBox[{
     SubscriptBox["PS", "1"], ",", 
     SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"steady", " ", "state"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.813479947939906*^9, 3.8134799537619143`*^9}, {
   3.8134832493954487`*^9, 3.813483249930255*^9}, 3.813483337189913*^9, {
   3.8134833765592527`*^9, 3.8134834006542*^9}, {3.813483440187175*^9, 
   3.8134835429456367`*^9}, {3.813483601271027*^9, 3.813483601932304*^9}, {
   3.813484121351952*^9, 3.813484123952243*^9}, {3.813659856204762*^9, 
   3.813659865707055*^9}},ExpressionUUID->"be4eab20-789e-43a4-9b09-\
b5ccd9bf1be7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", "t", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        SubscriptBox["\[Lambda]", "1"]}], "+", 
       SubscriptBox["\[Mu]", "1"], "+", 
       SqrtBox[
        RowBox[{
         SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
         RowBox[{"6", " ", 
          SubscriptBox["\[Lambda]", "1"], " ", 
          SubscriptBox["\[Mu]", "1"]}], "+", 
         SubsuperscriptBox["\[Mu]", "1", "2"]}]]}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
            RowBox[{"6", " ", 
             SubscriptBox["\[Lambda]", "1"], " ", 
             SubscriptBox["\[Mu]", "1"]}], "+", 
            SubsuperscriptBox["\[Mu]", "1", "2"]}]]}]]}], ")"}], " ", 
      SubsuperscriptBox["\[Lambda]", "1", "2"]}], "+", 
     RowBox[{
      SubscriptBox["\[Mu]", "1"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
               RowBox[{"6", " ", 
                SubscriptBox["\[Lambda]", "1"], " ", 
                SubscriptBox["\[Mu]", "1"]}], "+", 
               SubsuperscriptBox["\[Mu]", "1", "2"]}]]}]]}], ")"}], " ", 
         SubscriptBox["\[Mu]", "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
               RowBox[{"6", " ", 
                SubscriptBox["\[Lambda]", "1"], " ", 
                SubscriptBox["\[Mu]", "1"]}], "+", 
               SubsuperscriptBox["\[Mu]", "1", "2"]}]]}]]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
           RowBox[{"6", " ", 
            SubscriptBox["\[Lambda]", "1"], " ", 
            SubscriptBox["\[Mu]", "1"]}], "+", 
           SubsuperscriptBox["\[Mu]", "1", "2"]}]]}]}], ")"}]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["\[Lambda]", "1"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
               RowBox[{"6", " ", 
                SubscriptBox["\[Lambda]", "1"], " ", 
                SubscriptBox["\[Mu]", "1"]}], "+", 
               SubsuperscriptBox["\[Mu]", "1", "2"]}]]}]]}], ")"}], " ", 
         SubscriptBox["\[Mu]", "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
               RowBox[{"6", " ", 
                SubscriptBox["\[Lambda]", "1"], " ", 
                SubscriptBox["\[Mu]", "1"]}], "+", 
               SubsuperscriptBox["\[Mu]", "1", "2"]}]]}]]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
           RowBox[{"6", " ", 
            SubscriptBox["\[Lambda]", "1"], " ", 
            SubscriptBox["\[Mu]", "1"]}], "+", 
           SubsuperscriptBox["\[Mu]", "1", "2"]}]]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Lambda]", "1", "2"], "+", 
     RowBox[{"6", " ", 
      SubscriptBox["\[Lambda]", "1"], " ", 
      SubscriptBox["\[Mu]", "1"]}], "+", 
     SubsuperscriptBox["\[Mu]", "1", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.813483378556982*^9, 3.8134834012863817`*^9}, {
   3.81348353073326*^9, 3.8134835432665873`*^9}, 3.813484126815138*^9, 
   3.813484619713893*^9, 3.813512141211301*^9, 3.813551339869503*^9, 
   3.813641175562134*^9, 3.813641217466288*^9, 3.8136412680035133`*^9, 
   3.813654594061892*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"45dc8a1e-be2f-4d56-a52c-0ce9c58e8300"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SubscriptBox["\[Lambda]", "1"]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["\[Lambda]", "1"]}], "-", 
    SubscriptBox["\[Mu]", "1"]}], 
   RowBox[{"2", " ", 
    SubsuperscriptBox["\[Lambda]", "1", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.813483378556982*^9, 3.8134834012863817`*^9}, {
   3.81348353073326*^9, 3.8134835432665873`*^9}, 3.813484126815138*^9, 
   3.813484619713893*^9, 3.813512141211301*^9, 3.813551339869503*^9, 
   3.813641175562134*^9, 3.813641217466288*^9, 3.8136412680035133`*^9, 
   3.813654594068605*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"f95f5caa-6046-4c63-aa8a-9631de4424b1"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], "+", 
     SubscriptBox["\[Mu]", "1"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      SubscriptBox["\[Lambda]", "1"]}], "+", 
     SubscriptBox["\[Mu]", "1"]}], ")"}]}], 
  RowBox[{"2", " ", 
   SubsuperscriptBox["\[Lambda]", "1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["\[Lambda]", "1"]}], "+", 
     SubscriptBox["\[Mu]", "1"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.813483378556982*^9, 3.8134834012863817`*^9}, {
   3.81348353073326*^9, 3.8134835432665873`*^9}, 3.813484126815138*^9, 
   3.813484619713893*^9, 3.813512141211301*^9, 3.813551339869503*^9, 
   3.813641175562134*^9, 3.813641217466288*^9, 3.8136412680035133`*^9, 
   3.813654594073539*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"22112938-26d2-4c3b-a58a-c50ef0ef7e77"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], "+", 
     SubscriptBox["\[Mu]", "1"]}], ")"}], "2"], 
  RowBox[{"2", " ", 
   SubsuperscriptBox["\[Lambda]", "1", "2"], " ", 
   SubscriptBox["\[Mu]", "1"]}]]], "Output",
 CellChangeTimes->{{3.813483378556982*^9, 3.8134834012863817`*^9}, {
   3.81348353073326*^9, 3.8134835432665873`*^9}, 3.813484126815138*^9, 
   3.813484619713893*^9, 3.813512141211301*^9, 3.813551339869503*^9, 
   3.813641175562134*^9, 3.813641217466288*^9, 3.8136412680035133`*^9, 
   3.813654594078547*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"a7d6f2e3-04f0-4c09-a5f2-a48371c9ab56"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Lambda]", "1"], "+", 
          SubscriptBox["\[Mu]", "1"]}], ")"}]}]]}], ")"}], "2"], " ", 
   SubsuperscriptBox["\[Lambda]", "1", "2"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], "+", 
     SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.813483378556982*^9, 3.8134834012863817`*^9}, {
   3.81348353073326*^9, 3.8134835432665873`*^9}, 3.813484126815138*^9, 
   3.813484619713893*^9, 3.813512141211301*^9, 3.813551339869503*^9, 
   3.813641175562134*^9, 3.813641217466288*^9, 3.8136412680035133`*^9, 
   3.813654594120459*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"3841e399-cc45-4ea0-9568-0a7cffed3c23"],

Cell[BoxData[
 FractionBox[
  SubsuperscriptBox["\[Lambda]", "1", "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], "+", 
     SubscriptBox["\[Mu]", "1"]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.813483378556982*^9, 3.8134834012863817`*^9}, {
   3.81348353073326*^9, 3.8134835432665873`*^9}, 3.813484126815138*^9, 
   3.813484619713893*^9, 3.813512141211301*^9, 3.813551339869503*^9, 
   3.813641175562134*^9, 3.813641217466288*^9, 3.8136412680035133`*^9, 
   3.8136545941880817`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"80e1c883-8a3f-4a7d-aa75-e0538e5354c5"],

Cell[BoxData[
 RowBox[{"PS", ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]], "Output",
 CellChangeTimes->{{3.813483378556982*^9, 3.8134834012863817`*^9}, {
   3.81348353073326*^9, 3.8134835432665873`*^9}, 3.813484126815138*^9, 
   3.813484619713893*^9, 3.813512141211301*^9, 3.813551339869503*^9, 
   3.813641175562134*^9, 3.813641217466288*^9, 3.8136412680035133`*^9, 
   3.813654594193063*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"b3a78664-b368-43cf-a36f-42d6d5adc65b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", "\n", 
    RowBox[{
     RowBox[{"1.7", ".", " ", "Numerical"}], " ", "values", " ", "of", " ", 
     "the", " ", "measures", "\n", "Use", " ", "these", " ", "parameter", " ",
      "sets"}], " ", "\n", "*)"}], "Code"], 
  StyleBox["\n", "Code"], 
  RowBox[{
   StyleBox[
    RowBox[{
     SubscriptBox["\[ScriptCapitalP]", "11"], "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], "\[Rule]", " ", "0.1"}], ",", " ", 
       RowBox[{
        SubscriptBox["\[Mu]", "1"], "\[Rule]", "1"}]}], "}"}]}], "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox[
    RowBox[{
     SubscriptBox["\[ScriptCapitalP]", "12"], "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], "\[Rule]", " ", "0.5"}], ",", " ", 
       RowBox[{
        SubscriptBox["\[Mu]", "1"], "\[Rule]", "1"}]}], "}"}]}], "Code"], 
   StyleBox["\n", "Code"], 
   StyleBox["\n", "Code"], 
   RowBox[{
    RowBox[{"ProbStationary", "[", 
     SubscriptBox["\[ScriptCapitalM]", "1"], "]"}], "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "11"]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"solve", " ", "symbolically", " ", "first"}], " ", "\[Rule]", 
     " ", 
     RowBox[{"then", " ", "make", " ", "numerical"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ProbStationary", "[", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], " ", "/.", " ", 
      SubscriptBox["\[ScriptCapitalP]", "11"]}], ")"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"RECOMMENDED", " ", "FOR", " ", "LARGE", " ", 
      RowBox[{"MODELS", ":", " ", 
       RowBox[{"make", " ", "matrix", " ", "numerical", " ", "first"}]}]}], 
     " ", "\[Rule]", " ", 
     RowBox[{"then", " ", "solve"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalP]", "11"], "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], "\[Rule]", " ", "0.1"}], ",", " ", 
       RowBox[{
        SubscriptBox["\[Mu]", "1"], "\[Rule]", "1"}]}], "}"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UnAvailability", "[", 
     RowBox[{
      RowBox[{"P", "[", "t", "]"}], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "11"]}], " ", 
   RowBox[{"(*", " ", "transient", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RelFunc", "[", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"], ",", "t", ",", "0"}], "]"}], 
    " ", "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "11"]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"reliability", " ", "function"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UnAvailability", "[", 
     RowBox[{"PS", ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "11"]}], 
   RowBox[{"(*", " ", 
    RowBox[{"steady", " ", "state"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MTFF", "[", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"], ",", "1"}], "]"}], " ", "/.", 
    " ", 
    SubscriptBox["\[ScriptCapitalP]", "11"]}], 
   RowBox[{"(*", " ", 
    RowBox[{"Mean", " ", "Time", " ", "to", " ", "First", " ", "Failure"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MTTF", "[", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "11"]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Mean", " ", "Time", " ", "To", " ", "Failure"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MTBF", "[", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "11"]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Mean", " ", "Time", " ", "Between", " ", "Failures"}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalP]", "12"], "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], "\[Rule]", " ", "0.5"}], ",", " ", 
       RowBox[{
        SubscriptBox["\[Mu]", "1"], "\[Rule]", "1"}]}], "}"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UnAvailability", "[", 
     RowBox[{
      RowBox[{"P", "[", "t", "]"}], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "12"]}], " ", 
   RowBox[{"(*", " ", "transient", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RelFunc", "[", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"], ",", "t", ",", "1"}], "]"}], 
    " ", "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "12"]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"reliability", " ", "function"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UnAvailability", "[", 
     RowBox[{"PS", ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "12"]}], 
   RowBox[{"(*", " ", 
    RowBox[{"steady", " ", "state"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MTFF", "[", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"], ",", "1"}], "]"}], " ", "/.", 
    " ", 
    SubscriptBox["\[ScriptCapitalP]", "12"]}], 
   RowBox[{"(*", " ", 
    RowBox[{"Mean", " ", "Time", " ", "to", " ", "First", " ", "Failure"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MTTF", "[", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "12"]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Mean", " ", "Time", " ", "To", " ", "Failure"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MTBF", "[", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalM]", "1"], ",", 
      SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], " ", "/.", " ", 
    SubscriptBox["\[ScriptCapitalP]", "12"], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Mean", " ", "Time", " ", "Between", " ", "Failures"}], " ", 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.813483583083453*^9, 3.813483634316236*^9}, {
  3.8134836716712523`*^9, 3.813483756124995*^9}, {3.8134841437243958`*^9, 
  3.813484155486617*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"9dc1df58-8e60-4f05-a7b3-526bee56857e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Lambda]", "1"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["\[Mu]", "1"], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654594255385*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"22a8c556-aa97-40d6-992f-be9182c9b237"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Lambda]", "1"], "\[Rule]", "0.5`"}], ",", 
   RowBox[{
    SubscriptBox["\[Mu]", "1"], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654594260291*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"0b7a9334-7ece-47f4-bdac-14c6b132ea0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8264462809917354`", ",", "0.1652892561983471`", ",", 
   "0.008264462809917356`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654594265216*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"5ee15b8b-b320-4c2c-971d-691bfae34946"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8264462809917356`", ",", "0.16528925619834714`", ",", 
   "0.008264462809917363`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654594270184*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"b8657534-67f8-422f-90f3-6ed43654a6c9"],

Cell[BoxData[
 RowBox[{"0.008264462809917356`", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "1.1`"}], " ", "t"}]]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.8136545943062973`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"102b14c5-de72-4386-8702-911b48c9b996"],

Cell[BoxData[
 RowBox[{"0.3105590062111801`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "1.284428877022476`"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"1.2688577540449522`", " ", "t"}]], "+", 
    RowBox[{"1.2688577540449522`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.2688577540449522`", " ", "t"}]]}], ")"}]}], "+", 
    RowBox[{"0.010000000000000002`", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.2688577540449522`", " ", "t"}]]}], ")"}]}], "+", 
    RowBox[{"0.30000000000000004`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.2688577540449522`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"1.2688577540449522`", " ", "t"}]]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"1.2688577540449522`", " ", "t"}]]}], ")"}]}]}], ")"}]}]}],
    ")"}]}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654595078179*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"e0ac0c2f-5a95-4920-973c-b40d444c975e"],

Cell[BoxData[
 RowBox[{"PS", ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654595083569*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"75027475-ea19-4e48-88c8-a8e3b0ca830c"],

Cell[BoxData["65.`"], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.8136545950882*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"b811ec2c-2830-45eb-8630-85d77599d9f5"],

Cell[BoxData["64.16666666666667`"], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654595093565*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"91eb89c1-97d9-4271-8080-ea9a31a26fa9"],

Cell[BoxData["60.5`"], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654595099325*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"dc6b27ff-dc22-40d0-b485-074df459d7ac"],

Cell[BoxData[
 RowBox[{"0.1111111111111111`", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "1.5`"}], " ", "t"}]]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654595103889*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"281af76f-86cd-4ef9-970c-65c63f6c0d90"],

Cell[BoxData[
 RowBox[{"0.11764705882352941`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2.2807764064044154`"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2.0615528128088303`", " ", "t"}]], "+", 
    RowBox[{"2.0615528128088303`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2.0615528128088303`", " ", "t"}]]}], ")"}]}], "+", 
    RowBox[{"0.25`", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2.0615528128088303`", " ", "t"}]]}], ")"}]}], "+", 
    RowBox[{"1.5`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2.0615528128088303`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2.0615528128088303`", " ", "t"}]]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2.0615528128088303`", " ", "t"}]]}], ")"}]}]}], ")"}]}]}],
    ")"}]}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.8136545951936827`*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"4c5f1f41-e52b-455a-8f9d-bf6ceee10dfb"],

Cell[BoxData[
 RowBox[{"PS", ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654595199168*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"9e2cd4a9-ce64-4d24-988c-c8fb46fa579e"],

Cell[BoxData["5.`"], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.81365459520357*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"c0dad048-a839-4cec-b311-6f548f5519ee"],

Cell[BoxData["4.5`"], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654595209612*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"3bd96ce7-f1f0-4333-98f0-16443f2922a6"],

Cell[BoxData["4.5`"], "Output",
 CellChangeTimes->{{3.8134837033668337`*^9, 3.813483714726697*^9}, {
   3.8134837535793056`*^9, 3.813483756637723*^9}, 3.813484231650523*^9, 
   3.8135121450044203`*^9, 3.81355134017743*^9, 3.813641175610075*^9, 
   3.813641217765864*^9, 3.813641268306601*^9, 3.813654595214241*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"5ad9c490-cb5e-40b7-905b-76f38233c3c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"1.8", ".", " ", "Plot"}], " ", "the", " ", "transient", " ", 
     "steady", " ", "state", " ", "unavailability", " ", "as", " ", "a", " ", 
     "function", " ", "of", " ", "t"}], " ", "-", " ", 
    RowBox[{"what", " ", "do", " ", "you", " ", 
     RowBox[{"observe", "?"}]}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"UnAvailability", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"P", "[", "t", "]"}], "/.", " ", 
            SubscriptBox["\[ScriptCapitalP]", "11"]}], ",", 
           SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], ",", 
         "\"\<U(t) (transient)\>\""}], "]"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"UnAvailability", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["PS", "1"], "/.", " ", 
            SubscriptBox["\[ScriptCapitalP]", "11"]}], ",", 
           SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], ",", 
         "\"\<U (steady state)\>\""}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      SubscriptBox["\[ScriptCapitalP]", "11"]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "UnAvailability"}], "}"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"UnAvailability", "[", 
           RowBox[{
            RowBox[{"P", "[", "t", "]"}], ",", 
            SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], "/.", " ", 
          SubscriptBox["\[ScriptCapitalP]", "12"]}], ",", 
         "\"\<U(t) (transient)\>\""}], "]"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"UnAvailability", "[", 
           RowBox[{
            SubscriptBox["PS", "1"], ",", 
            SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], "/.", " ", 
          SubscriptBox["\[ScriptCapitalP]", "12"]}], ",", 
         "\"\<U (steady state)\>\""}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      SubscriptBox["\[ScriptCapitalP]", "12"]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "UnAvailability"}], "}"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8134842364512777`*^9, 3.813484434513233*^9}, {
  3.813484655925069*^9, 3.8134848285062733`*^9}, {3.8135549952782*^9, 
  3.8135550012313833`*^9}, {3.813654611044373*^9, 3.81365461296906*^9}, {
  3.813660694167556*^9, 3.8136607065175533`*^9}, {3.813660871141165*^9, 
  3.813660934593362*^9}, {3.813660979691037*^9, 3.81366108137116*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"5ce0b1df-7cf0-426c-b8bb-c7dc352ac51b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/wFRCtk9
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$38138, {1}}]& ], 
        Annotation[#, "Charting`Private`Tag$38138#1"]& ], 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdpuwpxn2V/fNNiz336k/lZ+pT2Mv/DU
/MLX8jvh/HXrO2/n6J2C89PtL858U3QZzs97qvl4y7qbcD6XYov6fYsHcH6f
wGmthQmP4fyk2yH7mc88g/MLj7Yk5au/gvM3FvAES3i+RbinOvuVQfgHOL9p
/p/AL28+wvkMlx847Kn6DOerlaRVhGh9hfOffJ0exr33G5zv9TSrdlLhDzjf
78kEbTm5X3D+q8NJDSfW/obz9QSvyTrH/0X4z/5r4p3P/+B897dR35VCGRxg
/BuHUhijdBjh/K0dR+IUviL4aaylD86dY4Lzk4uqt/LMYobz9dO1z/kkssD5
54V0uEstWeH83euaZusws8H51YxaAWfuIvhcd6o88raww/lPlylOmV/DAedP
0ZBk2RnKCedPmJV2PFGBC86PmhJ7juc5gv/DZenP+fu44fzHT50qDrXzwPmL
bA2lzybywvlrW0sF03X54Pz20GRv5q8IvumdhSvbz/LD+TM0Z6896y0A59cf
6J3hvRPB95UOXXpKRRDOd8w7Hi3YieDPl0lSOfMVwVc5vHyaX7QQwn+6h7Qu
7UPw0z6zXDypJQznJ238pNDZj+BPuMTTe+Q4gr/vs9rP//8RfAA0nMZ3
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$38138, {2}}]& ], 
        Annotation[#, "Charting`Private`Tag$38138#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["t", HoldForm], TraditionalForm], 
       FormBox["UnAvailability", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["\[Lambda]", "1"], "\[Rule]", "0.1`"}], ",", 
           RowBox[{
             SubscriptBox["\[Mu]", "1"], "\[Rule]", "1"}]}], "}"}], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"U(t) (transient)\"", "\"U (steady state)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8134843456020517`*^9, 3.813484391386034*^9}, 
   3.813484440912056*^9, 3.813484630062396*^9, 3.81348467763282*^9, {
   3.8134847171530333`*^9, 3.813484763304741*^9}, 3.81348483346426*^9, 
   3.8135513442047653`*^9, 3.8135550046144247`*^9, 3.813641175780984*^9, 
   3.813641272510124*^9, 3.813654598406596*^9, 3.8136608910473146`*^9, 
   3.813660922865644*^9, 3.81366099299905*^9, {3.813661035352374*^9, 
   3.813661085489751*^9}},
 CellLabel->
  "Out[225]=",ExpressionUUID->"ceb6b2f8-0801-48aa-ad9c-ecf1e59baef3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
t+URLu7qyQ3SxUUMiQqX3+Xh/h/eLrcx
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$39811, {1}}]& ], 
        Annotation[#, "Charting`Private`Tag$39811#1"]& ], 
       TagBox[
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdpO5nghEO2xZ7/9SP2t/Ep7GH/hqfmF
r+V3wvnr1nfeztE7Been21+c+aboMpyf91Tz8ZZ1N+F8LsUW9fsWD+D8PoHT
WgsTHsP5SbdD9jOfeQbnFx5tScpXfwXnbyzgCZbwfItwT3X2K4PwD3B+0/w/
gV/efITzGS4/cNhT9RnOVytJqwjR+grnP/k6PYx77zc43+tpVu2kwh9wvt+T
Cdpycr/g/FeHkxpOrP0N5+sJXpN1jv+L8J/918Q7n//B+e5vo74rhTI4wPg3
DqUwRukwwvlbO47EKXxF8NNYSx+cO8cE5ycXVW/lmcUM5+una5/zSWSB888L
6XCXWrLC+bvXNc3WYWaD86sZtQLO3EXwue5UeeRtYYfzny5TnDK/hgPOn6Ih
ybIzlBPOnzAr7XiiAhecHzUl9hzPcwT/h8vSn/P3ccP5j586VRxq54HzF9ka
Sp9N5IXz17aWCqbr8sH57aHJ3sxfEXzTOwtXtp/lh/NnaM5ee9ZbAM6vP9A7
w3sngu8rHbr0lIognO+YdzxasBPBny+TpHLmK4Kvcnj5NL9oIYT/dA9pXdqH
4Kd9Zrl4UksYzk/a+Emhsx/Bn3CJp/fIcQR/32e1n///I/gAGHR5rw==
           "]]}, 
         Annotation[#, {{Legended}, Charting`Private`Tag$39811, {2}}]& ], 
        Annotation[#, "Charting`Private`Tag$39811#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["t", HoldForm], TraditionalForm], 
       FormBox["UnAvailability", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["\[Lambda]", "1"], "\[Rule]", "0.5`"}], ",", 
           RowBox[{
             SubscriptBox["\[Mu]", "1"], "\[Rule]", "1"}]}], "}"}], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"U(t) (transient)\"", "\"U (steady state)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8134843456020517`*^9, 3.813484391386034*^9}, 
   3.813484440912056*^9, 3.813484630062396*^9, 3.81348467763282*^9, {
   3.8134847171530333`*^9, 3.813484763304741*^9}, 3.81348483346426*^9, 
   3.8135513442047653`*^9, 3.8135550046144247`*^9, 3.813641175780984*^9, 
   3.813641272510124*^9, 3.813654598406596*^9, 3.8136608910473146`*^9, 
   3.813660922865644*^9, 3.81366099299905*^9, {3.813661035352374*^9, 
   3.813661088561915*^9}},
 CellLabel->
  "Out[226]=",ExpressionUUID->"9d095e11-0755-4630-a7cd-1496b2722696"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "When", " ", "to", " ", "the", " ", "unavailabilty", " ", "exceed", " ", 
     "the", " ", "tolerance", " ", "level", " ", "of", " ", "5", "%"}], ",", 
    " ", 
    RowBox[{"using", " ", "the", " ", "set", " ", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalP]", "12"], "?"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"UnAvailability", "[", 
          RowBox[{
           RowBox[{"P", "[", "t", "]"}], ",", 
           SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], "/.", " ", 
         SubscriptBox["\[ScriptCapitalP]", "12"]}], ")"}], "-", "0.05"}], " ",
       "\[Equal]", " ", "0"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"UnAvailability", "[", 
         RowBox[{
          RowBox[{"P", "[", "t", "]"}], ",", 
          SubscriptBox["\[ScriptCapitalW]", "1"]}], "]"}], "/.", " ", 
        SubscriptBox["\[ScriptCapitalP]", "12"]}], ")"}], "\[Equal]", " ", 
      "0.05"}], " ", ",", " ", "t", ",", "Reals"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.813554702274021*^9, 3.813554844330433*^9}, {
  3.813554928897407*^9, 3.813554960671405*^9}, {3.8135550467429667`*^9, 
  3.813555147898542*^9}, {3.8136611131198893`*^9, 3.813661144610104*^9}, {
  3.813661329810474*^9, 3.813661376537459*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"0d371602-6079-4923-8681-42d346310a71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", "0.7407678400012605`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.813554844799719*^9, {3.81355493004535*^9, 3.8135549611461287`*^9}, 
   3.813555047711155*^9, {3.8135551063480873`*^9, 3.8135551485525703`*^9}, 
   3.8136411759451647`*^9, 3.813641275735437*^9, 3.8136546016380577`*^9, {
   3.8136611303911743`*^9, 3.8136611460248528`*^9}, {3.813661333785224*^9, 
   3.813661377136353*^9}},
 CellLabel->
  "Out[239]=",ExpressionUUID->"5eaa5506-68da-4ebf-8f03-5cd795ce3af7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", "0.3422098394975137`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "0.7407678400012607`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.813554844799719*^9, {3.81355493004535*^9, 3.8135549611461287`*^9}, 
   3.813555047711155*^9, {3.8135551063480873`*^9, 3.8135551485525703`*^9}, 
   3.8136411759451647`*^9, 3.813641275735437*^9, 3.8136546016380577`*^9, {
   3.8136611303911743`*^9, 3.8136611460248528`*^9}, {3.813661333785224*^9, 
   3.813661377175215*^9}},
 CellLabel->
  "Out[240]=",ExpressionUUID->"c440078e-300c-4dcc-919f-76383a4b3aff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2: Probability of open runways after snow fall  [25%]", \
"Subsection",
 CellChangeTimes->{{3.8134719781048727`*^9, 3.813472088979434*^9}, {
  3.813472923699852*^9, 3.813472959238761*^9}, {3.813555463972522*^9, 
  3.81355546405035*^9}, {3.8135555997099857`*^9, 3.8135555998297577`*^9}, {
  3.813586944674818*^9, 3.813586944909729*^9}, {3.8135890645420637`*^9, 
  3.813589066757675*^9}},ExpressionUUID->"52c71213-1211-4b2c-8a74-\
939e51ab2cda"],

Cell[TextData[{
 "You are going to make a model to obtain the transient probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "i"], "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "6f621a80-8f7c-4cf4-be06-a617a700ef8a"],
 " that  ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "9596310e-8ee3-4857-959c-5d8324e8af69"],
 " runways are open at time t.  \nAssume that \n- you have two runways, and \
that no trucks fail during plowing,  \n- the expected snowing time is  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "\[Kappa]", " "}], TraditionalForm]],ExpressionUUID->
  "0bbfc3a1-21f7-4e07-ba47-6d7a9dbce25b"],
 " and plowing time is 1/\[Gamma],\n- when both runways are cleaned and \
reopened, it is assumed that snowing stops\n\t(this means that we are only \
interested in ",
 StyleBox["the time until first reopening",
  FontSlant->"Italic"],
 " after the snow fall closed the airport), and\n- two trucks can not plow \
the same runways simultaneously.\n\nThe objective is to study the transient \
period from ",
 StyleBox["closing both runways at t=0,",
  FontSlant->"Italic"],
 " and until the airport is partly (1 runway), and fully reopened (both \
runways).\n\n2.1. Define the system state variable(s) and corresponding \
events and make a Markov model to obtain the transient state probabilities \
for ",
 StyleBox["n",
  FontSlant->"Italic"],
 " trucks.\n2.2. Use the package provided to obtain the probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "i"], "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "8a3dd42f-1a2e-41b6-baa0-26c07c8bdaa1"],
 " that  ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "777d7edc-04cf-48db-933f-76561c33d104"],
 " runways are reopened at time t, given that they were closed at t=0 after a \
heavy snow fall (general for ",
 StyleBox["n",
  FontSlant->"Italic"],
 " trucks).\n2.3. Plot ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "1"], "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "655ceeff-72ca-42bc-ab74-d8fd991129c9"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "2"], "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "6300f798-73a9-4afd-8a0d-3b10a95e7d59"],
 " for ",
 StyleBox["n=1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["n=2",
  FontSlant->"Italic"],
 " and compare the results.  Use \
{\[Gamma]\[Rule]0.1,\[Kappa]\[Rule]1/60}[1/minutes]\n\tPlot all state \
probabilities for the first two hours (120 minutes) and discuss what you \
observe.  Use {\[Gamma]\[Rule] 0.1,\[Kappa]\[Rule] 1/60} [1/minutes]\n\t\
Furthermore, find the maximum reopening time ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "max"], TraditionalForm]],ExpressionUUID->
  "9ad82707-6dc6-4457-a586-a602f0551864"],
 " for which the probability is \[GreaterEqual]0.95,  ",
 StyleBox["P(T<", "Input"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "max"], TraditionalForm]],ExpressionUUID->
  "df8e72cd-e2e9-4e40-8151-00f999efcb67"],
 StyleBox[")\[GreaterEqual]0.95.\n\t  ", "Input"],
 "Compare n=1 and n=2.\n2.4. Compare",
 StyleBox[" the expected time until first reopening ",
  FontSlant->"Italic"],
 "with n=1 and n=2. \n\tPlot the ",
 StyleBox["relative difference in the expected time until first reopening",
  FontSlant->"Italic"],
 " (gain) for n=1 and n=2 as the expected snowing time 1/\[Kappa] changes. \n\
\tDiscuss the gain you get by adding one truck (n=1 -> n=2) when \[Kappa] \
changes. Use {\[Gamma]\[Rule]0.1} [1/minutes] \n\tWhat is the minimum and \
maximum gain (and for which \[Kappa] value)?"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/cPqfcT8zDeOC56YdINoNY/lm0B0TkDeFhC9PZhj
2hGQ+DHBXSC69XzJWRBtI/vnLoi+tvTaQxDtF2LzHkSfS65muA6kjyzcAabz
6l5zgOgS1wN8IDq26rAwiJZz+uwIottNjfRvgMznSTAB0UVdNRYg+l66sSWI
rgg7bAuiT11VcgKrs3hy7wOQlm2c/gJEBzBYvQPRq3Y3gemarZmfQHTzRua/
INpuSzrjR5C+YH8eEH1j/gkREG1jJCUPop1esZqCaLucFEsQ/evR9ZjfQPpw
yv/JILooc+EsEK33bMMcEA0AiNCmzQ==
  
  "],ExpressionUUID->"27fc6839-1ce0-4feb-8b96-6840fe8015a6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Task 3: Two plowing trucks with two repairmen who might go on sick-leave [30%]\
\>", "Subsection",
 CellChangeTimes->{{3.8134719781048727`*^9, 3.813472064308278*^9}, 
   3.8134721277245197`*^9, {3.813472858819593*^9, 3.8134728880149612`*^9}, {
   3.8134946638834753`*^9, 3.81349467786803*^9}, {3.8135059164990997`*^9, 
   3.813505917716219*^9}, {3.813555457838421*^9, 3.8135554579176893`*^9}, {
   3.8135555928839617`*^9, 3.813555592980987*^9}, {3.813587520177544*^9, 
   3.813587520406549*^9}, {3.81358905482869*^9, 3.813589073697348*^9}, {
   3.813632923410543*^9, 
   3.8136329239277*^9}},ExpressionUUID->"a630f5bd-6e64-4162-ad1f-\
08c7531e1e9a"],

Cell[TextData[{
 "The repair of the trucks depends on a repairman.  \nIn the model from task \
1 we assumed that we have one repairman per truck.  \nHowever, the repairmen \
might get sick ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"intensity", " ", "\[Nu]"}]}], TraditionalForm]],ExpressionUUID->
  "a9f756a9-00c8-4f5e-bf66-122516e91748"],
 ") and are recovered (intensity \[Epsilon]).  \nMake the necessary changes \
in the model from task 1 to take into account that the repair of a truck \
might get delayed due to (a) sick repairman(men). \n\n3.1. Define the system \
state variable(s) and corresponding events, and make a Markov model to obtain \
state probabilities.\n3.2. Use the package provided to obtain the probability \
that n=0, 1, and 2 trucks are available for ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    SubscriptBox["\[ScriptCapitalP]", "2"], "Code"], 
   StyleBox["=", "Code"], 
   RowBox[{
    StyleBox["{", "Code"], 
    RowBox[{
     RowBox[{
      SubscriptBox[
       StyleBox["\[Lambda]", "Code"], "2"], 
      StyleBox["\[Rule]", "Code"], 
      StyleBox["0.1", "Code"]}], 
     StyleBox[",", "Code"], 
     StyleBox[" ", "Code"], 
     StyleBox[
      RowBox[{
       SubscriptBox["\[Mu]", "2"], " ", "\[Rule]", " ", "1"}], "Code"], 
     StyleBox[",", "Code"], 
     StyleBox[" ", "Code"], 
     RowBox[{"\[Nu]", "\[Rule]", " ", "0.01"}], ",", " ", 
     RowBox[{"\[Epsilon]", " ", "\[Rule]", "0.5"}]}], "}"}]}]],
  CellChangeTimes->{{3.813483583083453*^9, 3.813483634316236*^9}, {
   3.8134836716712523`*^9, 3.813483756124995*^9}, {3.8134841437243958`*^9, 
   3.813484155486617*^9}},ExpressionUUID->
  "54871941-b8b8-4c8f-969c-f15a51c89b51"],
 "[1/days] \n3.3. Compare the two models, without (task 1) and with (task 2) \
repairmen on sick leave with respect to the unavailability and the \
probability that one truck has failed. \nChange the repair intensity \[Beta] \
(assume it partly depends on the skills) and discuss whether it is sufficient \
to have one truck or if you need two.  \nYou first need to define what you \
think is the maximum acceptable probability of not having a truck available.\n\
3.4. Obtain\[NonBreakingSpace]the mean time to first failure, and mean time \
to failure.  Are they the same or different? Why?"
}], "Text",
 CellChangeTimes->{{3.813491143204488*^9, 3.813491421742507*^9}, {
   3.813491607315516*^9, 3.813491690511614*^9}, 3.8135060016493263`*^9, {
   3.813507211762701*^9, 3.813507213149268*^9}, {3.813508698126334*^9, 
   3.813508766977275*^9}, {3.8135089684357357`*^9, 3.813509149323984*^9}, {
   3.813511120756782*^9, 3.813511148538414*^9}, {3.81355413648855*^9, 
   3.813554144606126*^9}, {3.813554197722805*^9, 3.8135542167941628`*^9}, {
   3.81355425585797*^9, 3.8135543540569983`*^9}, {3.8135875226619377`*^9, 
   3.813587524195256*^9}, {3.813641501617765*^9, 3.813641506543631*^9}, {
   3.813641557640822*^9, 3.813641585339945*^9}, {3.813641682079021*^9, 
   3.813641733121155*^9}, {3.81364176913268*^9, 3.813641772360517*^9}, {
   3.81365542211098*^9, 3.813655442275985*^9}, {3.8136619644312363`*^9, 
   3.813661984308991*^9}, {3.813662018956023*^9, 3.81366202542594*^9}, {
   3.8136620662650967`*^9, 
   3.813662067118602*^9}},ExpressionUUID->"5e6f7a89-89f7-4314-87d4-\
93f82d0a5c25"]
}, Closed]],

Cell[CellGroupData[{

Cell["Task 4: Performability [15%] [no assistance]", "Subsection",
 CellChangeTimes->{{3.8134719781048727`*^9, 3.813472091184569*^9}, {
  3.813491090139669*^9, 3.8134911171628532`*^9}, {3.8135554722206078`*^9, 
  3.8135554764845247`*^9}, {3.813587541762258*^9, 3.8135875419607058`*^9}, {
  3.813588901891868*^9, 3.813588908044344*^9}, {3.81358904345271*^9, 
  3.8135890435665827`*^9}, {3.813590155555863*^9, 3.813590169058689*^9}, {
  3.8136329195736923`*^9, 
  3.813632920159506*^9}},ExpressionUUID->"222bf6b2-50e1-4a26-8713-\
46c02254344f"],

Cell[TextData[{
 "The focus in this task is on what is called ",
 StyleBox["Performability",
  FontSlant->"Italic"],
 " - \[OpenCurlyDoubleQuote]a measurement of how a degradable system performs\
\[CloseCurlyDoubleQuote] [1],[2][3].  \nIn a performability model you combine \
the dependability model (here: truck availability model from task 3) with the \
performance (here: probability of reopening runways from task 2).\nLet\
\[CloseCurlyQuote]s set the guaranteed maximum time to reopen to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "max"], "=", "45"}], TraditionalForm]],ExpressionUUID->
  "fdf80374-88d8-4e21-968e-eb2bb1421850"],
 " minutes.  \n\n4.1. What is the probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"T", "<", 
     SubscriptBox["T", "max"]}]}], TraditionalForm]],ExpressionUUID->
  "61db3e51-9838-460f-ba89-a9004a935ac9"],
 ") that it takes less than ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "max"], "=", "45"}], TraditionalForm]],ExpressionUUID->
  "aafc4a84-2dca-4512-857e-1b3c12994b4d"],
 " minutes to reopen both runways?  \nCalculate it for n=0, 1 and 2 trucks \
and using  {\[Gamma]\[Rule] 0.1,\[Kappa]\[Rule] 1/60} [1/minutes] from task \
2.\n4.2. Combine the probabilities (which are conditioned on n=0,1, and 2) \
with the model for truck availability from task 3 to obtain the ",
 StyleBox["overall probability",
  FontSlant->"Italic"],
 " that it takes less than ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "max"], "=", "45"}], TraditionalForm]],ExpressionUUID->
  "ad798173-a752-433b-8cd8-c071c0fd86aa"],
 " minutes to reopen both runways.  \nUse ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    SubscriptBox["\[ScriptCapitalP]", "2"], "Code"], 
   StyleBox["=", "Code"], 
   RowBox[{
    StyleBox["{", "Code"], 
    RowBox[{
     RowBox[{
      SubscriptBox[
       StyleBox["\[Lambda]", "Code"], "2"], 
      StyleBox["\[Rule]", "Code"], 
      StyleBox["0.1", "Code"]}], 
     StyleBox[",", "Code"], 
     StyleBox[" ", "Code"], 
     StyleBox[
      RowBox[{
       SubscriptBox["\[Mu]", "2"], " ", "\[Rule]", " ", "1"}], "Code"], 
     StyleBox[",", "Code"], 
     StyleBox[" ", "Code"], 
     RowBox[{"\[Nu]", "\[Rule]", " ", "0.01"}], ",", " ", 
     RowBox[{"\[Epsilon]", " ", "\[Rule]", "0.5"}]}], "}"}]}]],
  CellChangeTimes->{{3.813483583083453*^9, 3.813483634316236*^9}, {
   3.8134836716712523`*^9, 3.813483756124995*^9}, {3.8134841437243958`*^9, 
   3.813484155486617*^9}},ExpressionUUID->
  "f12906fb-c6df-4108-83da-59fe344a28a7"],
 " in the truck availability model.\n4.3. Which factors contributes to the \
reopening time?  \nDiscuss what you would have done if you were asked to \
reduce the  guaranteed maximum time to reopen to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "max"], "=", "30"}], TraditionalForm]],ExpressionUUID->
  "dacbb876-372c-4985-b96a-6cb7f782cc78"],
 " minutes, without changing the guaranteed probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"T", "<", 
     SubscriptBox["T", "max"]}]}], TraditionalForm]],ExpressionUUID->
  "e6ed7630-f8c5-4bff-8764-a9dbaff4494d"],
 "). \nCalculate the new probabilities first, identify the factors that \
contributes, and do a qualitative discussions about (counter)measures that \
could be taken to ensure that the guaranteed probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"T", "<", 
     SubscriptBox["T", "max"]}]}], TraditionalForm]],ExpressionUUID->
  "a409b937-b32f-429a-a595-9098aa007333"],
 ") is provided."
}], "Text",
 CellChangeTimes->{{3.8134947990268784`*^9, 3.813494802664295*^9}, {
   3.8135538020911016`*^9, 3.813553816215157*^9}, {3.8135554813600283`*^9, 
   3.8135554864300013`*^9}, {3.813585535724448*^9, 3.813585891987872*^9}, {
   3.8135862648436003`*^9, 3.813586456486603*^9}, {3.81358648769976*^9, 
   3.8135867121040993`*^9}, {3.8135867767321*^9, 3.813586885625396*^9}, {
   3.813587551408684*^9, 3.813587591893714*^9}, {3.813653751371562*^9, 
   3.813653821686812*^9}, 3.81365398006769*^9, {3.813662001330155*^9, 
   3.813662011861717*^9}, {3.8136620807065077`*^9, 3.813662139659472*^9}, {
   3.813662183455*^9, 3.813662233814237*^9}, {3.813662295439455*^9, 
   3.813662457099474*^9}},ExpressionUUID->"8521156c-31cb-4d1a-aa55-\
b1392d84135c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Task 5: Structural model of the whole airport [30%] [no assistance]\
\>", "Subsection",
 CellChangeTimes->{{3.813485216796619*^9, 3.81348524611646*^9}, {
  3.813491057097075*^9, 3.813491060294888*^9}, {3.81355382453837*^9, 
  3.813553827680805*^9}, {3.813555602785495*^9, 3.813555604365871*^9}, {
  3.8135890591145163`*^9, 3.813589059358988*^9}, {3.813590181228939*^9, 
  3.8135901861509857`*^9}},ExpressionUUID->"02ca5f49-27be-443c-b9f8-\
a25da747186d"],

Cell[TextData[{
 "The system is \[OpenCurlyDoubleQuote]up/working\[CloseCurlyDoubleQuote] \
when \n\t- both runways, AND\n\t- at least 6 of 10 gates, AND\n\t- one of two \
deicing stations \nare available.\n\n5.1. What do you have to assume to use a \
Reliability Block Diagram (RBD)?  What does this mean in the context of the \
airport system? Is this realistic? \n5.2. Make an Reliability Block Diagram \
(RBD) of the total airport system\n5.3. Make reliability functions for \n\t- \
R(t,\[Lambda]) (single component), \n\t- ",
 Cell[BoxData[
  SubscriptBox["R", "s"]],
  CellChangeTimes->{{3.8134866477151546`*^9, 3.8134866655744333`*^9}, {
    3.813488609421904*^9, 3.813488652128763*^9}, 3.813488814350778*^9, {
    3.813555696349983*^9, 3.8135557148965883`*^9}},ExpressionUUID->
  "e4f1f8bb-3d20-4b9f-8444-551afb130ea0"],
 "(t,n,\[Lambda]), for an n-serial structure \n\t- ",
 Cell[BoxData[
  SubscriptBox["R", "p"]],
  CellChangeTimes->{{3.8134866477151546`*^9, 3.8134866655744333`*^9}, {
    3.813488609421904*^9, 3.813488652128763*^9}, 3.813488814350778*^9, {
    3.813555696349983*^9, 3.8135557148965883`*^9}},ExpressionUUID->
  "6180b747-d558-44dd-b934-5b3eedc2d747"],
 "(t,n,\[Lambda]), for an n-parallel structure \n\t- ",
 Cell[BoxData[
  SubscriptBox["R", "kofn"]],
  CellChangeTimes->{{3.8134866477151546`*^9, 3.8134866655744333`*^9}, {
    3.813488609421904*^9, 3.813488652128763*^9}, 3.813488814350778*^9, {
    3.813555696349983*^9, 3.8135557148965883`*^9}},ExpressionUUID->
  "7f0df2c2-63a1-4bc2-9d5f-2985bed93eea"],
 "(t,k,n,\[Lambda]), for a k-of-n structure\n\tCheck function  by \n\t",
 Cell[BoxData[
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["R", "kofn"], "[", 
     RowBox[{"t", ",", "6", ",", " ", "10", ",", " ", "\[Lambda]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Infinity]"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"\[Lambda]", ">", "0"}]}]}], "]"}]],ExpressionUUID->
  "82774b5b-2070-42a5-a943-2397baad8606"],
 "= ",
 Cell[BoxData[
  FractionBox["121", 
   RowBox[{"360", " ", "\[Lambda]"}]]],
  CellChangeTimes->{{3.8136331228945417`*^9, 3.81363315216595*^9}},
  ExpressionUUID->"26186f9a-74c6-4c20-ac2f-fa87f32086ba"],
 ". Which property have you now calculated?\n\tExplain how ",
 Cell[BoxData[
  SubscriptBox["R", "s"]],
  CellChangeTimes->{{3.8134866477151546`*^9, 3.8134866655744333`*^9}, {
    3.813488609421904*^9, 3.813488652128763*^9}, 3.813488814350778*^9, {
    3.813555696349983*^9, 3.8135557148965883`*^9}},ExpressionUUID->
  "d10b4fa5-9a3c-470f-9c74-e69b1d66fbe3"],
 "(t,n,\[Lambda]) and ",
 Cell[BoxData[
  SubscriptBox["R", "p"]],
  CellChangeTimes->{{3.8134866477151546`*^9, 3.8134866655744333`*^9}, {
    3.813488609421904*^9, 3.813488652128763*^9}, 3.813488814350778*^9, {
    3.813555696349983*^9, 3.8135557148965883`*^9}},ExpressionUUID->
  "1b5de1f2-5829-44c1-be4d-01c1efa9f352"],
 "(t,n,\[Lambda]) can be replaced by ",
 Cell[BoxData[
  SubscriptBox["R", "kofn"]],
  CellChangeTimes->{{3.8134866477151546`*^9, 3.8134866655744333`*^9}, {
    3.813488609421904*^9, 3.813488652128763*^9}, 3.813488814350778*^9, {
    3.813555696349983*^9, 3.8135557148965883`*^9}},ExpressionUUID->
  "ee62bfcf-c9a8-4e6a-aa31-28f67f680dff"],
 "(t,k,n,\[Lambda]).\n\tPlot ",
 Cell[BoxData[
  SubscriptBox["R", "kofn"]],
  CellChangeTimes->{{3.8134866477151546`*^9, 3.8134866655744333`*^9}, {
    3.813488609421904*^9, 3.813488652128763*^9}, 3.813488814350778*^9, {
    3.813555696349983*^9, 3.8135557148965883`*^9}},ExpressionUUID->
  "92a78dea-ffbf-485b-a8a8-7f834303e046"],
 "(t,6,10,\[Lambda]) and ",
 Cell[BoxData[
  SubscriptBox["R", "kofn"]],
  CellChangeTimes->{{3.8134866477151546`*^9, 3.8134866655744333`*^9}, {
    3.813488609421904*^9, 3.813488652128763*^9}, 3.813488814350778*^9, {
    3.813555696349983*^9, 3.8135557148965883`*^9}},ExpressionUUID->
  "9e3a07ff-cb91-4db5-bc82-f959c30b9b9b"],
 "(t,8,10,\[Lambda]) for 20 valued of \[Lambda] in [1,20] (hint: use Table \
and ListPlot)\n5.4. Use your reliability functions to determine the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "tot"], TraditionalForm]],ExpressionUUID->
  "939ea496-e05e-4a79-a741-89f040ba8ddd"],
 "(t) for the airport, compliant with your RBD.\n5.5. Plot ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "tot"], "(", "t", ")"}], TraditionalForm]],
  ExpressionUUID->"5f57e5d4-4766-4d18-b1c1-6c5ff052e73c"],
 " for  ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[ScriptCapitalP]", "\[Lambda]"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Lambda]", "1"], "\[Rule]", " ", "0.02"}], ",", 
     RowBox[{
      SubscriptBox["\[Lambda]", "2"], "\[Rule]", " ", "0.1"}], ",", 
     RowBox[{
      SubscriptBox["\[Lambda]", "3"], "\[Rule]", " ", "0.04"}]}], "}"}]}]],
  CellChangeTimes->{{3.813488396000749*^9, 3.81348846442076*^9}, {
   3.8134885201585207`*^9, 3.8134885717579327`*^9}},ExpressionUUID->
  "faca81cb-731f-44b1-ac6e-eca8bac77508"],
 "[1/days]\n\tWhat is the probability that the airport runs without \
interruptions for 1 day, 1 week, and 1 month (including night shifts)?\n5.6. \
What is the main cause of failure?  Which change(s) will have the highest \
effect?"
}], "Text",
 CellChangeTimes->{{3.813485251660809*^9, 3.8134852586255293`*^9}, {
   3.813486112940634*^9, 3.81348620488596*^9}, {3.813488588105166*^9, 
   3.81348859087113*^9}, {3.813488678958653*^9, 3.8134887263407707`*^9}, {
   3.813488758506727*^9, 3.813488836174925*^9}, {3.813489069715808*^9, 
   3.813489145215464*^9}, {3.813489250270166*^9, 3.813489376443983*^9}, {
   3.813491014506453*^9, 3.813491019896905*^9}, {3.813553830835446*^9, 
   3.813553874845154*^9}, {3.813553992948201*^9, 3.8135539965996513`*^9}, {
   3.81355564430383*^9, 3.813555687074736*^9}, {3.813556083484146*^9, 
   3.813556231353613*^9}, {3.813585169746047*^9, 3.813585178446311*^9}, {
   3.813590192172297*^9, 3.813590197904192*^9}, {3.813632952289871*^9, 
   3.813633114693433*^9}, {3.81363316945443*^9, 3.813633260690387*^9}, {
   3.8136332944443274`*^9, 3.813633386712985*^9}, {3.8136339517355824`*^9, 
   3.813634010415965*^9}, {3.813634060982876*^9, 3.813634067193718*^9}, {
   3.813636392065804*^9, 3.813636444766884*^9}, {3.813638978133078*^9, 
   3.8136389808132687`*^9}, {3.81366246854291*^9, 3.813662751418146*^9}, 
   3.813663654102912*^9, {3.813663692933125*^9, 
   3.813663699604348*^9}},ExpressionUUID->"5ebf3536-227a-481a-a899-\
3f0be03e0a26"]
}, Closed]]
}, Open  ]]
},
WindowSize->{2000, 1215},
WindowMargins->{{0, Automatic}, {-1, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PaperOrientation"->"Landscape",
"PaperSize"->{842, 595}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 366, 5, 69, "Subsection",ExpressionUUID->"824618f0-1d09-42df-a9c5-c583903dd864"],
Cell[CellGroupData[{
Cell[971, 31, 215, 4, 57, "Subsubsection",ExpressionUUID->"72419eb2-91be-45e5-9b93-df97885a2479"],
Cell[1189, 37, 287, 7, 45, "Text",ExpressionUUID->"d3e6efdf-489a-4ab3-bc3e-cb9eefd89308"],
Cell[1479, 46, 431, 8, 39, "Input",ExpressionUUID->"965b3fa0-d5f6-4e6c-a96b-8994fa57c490"],
Cell[1913, 56, 916, 18, 98, "Input",ExpressionUUID->"421a09d7-d37f-4538-bb6b-af05fdd0f926"],
Cell[2832, 76, 228, 5, 45, "Text",ExpressionUUID->"1fc6c123-91a9-4238-8c2f-ed25ab184dcc"],
Cell[CellGroupData[{
Cell[3085, 85, 176, 3, 39, "Input",ExpressionUUID->"e71cfb67-d6b1-42d0-a952-78bb65445319"],
Cell[3264, 90, 1509, 24, 74, "Output",ExpressionUUID->"290fc109-21fe-476a-920e-0937ea694670"]
}, Open  ]],
Cell[4788, 117, 36183, 601, 146, "Text",ExpressionUUID->"1d5a4e22-b997-435a-9d08-354cb8f7f4f6"],
Cell[CellGroupData[{
Cell[40996, 722, 204, 3, 39, "Input",ExpressionUUID->"0d246f06-242f-4986-b658-6cdd05edb1b2"],
Cell[41203, 727, 10574, 254, 213, "Output",ExpressionUUID->"2cbc7f10-8af0-4b0e-8c3a-87e4082e63bf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[51816, 986, 263, 5, 85, "Section",ExpressionUUID->"5330313e-67f5-4d5f-bf89-bc82369850ab"],
Cell[CellGroupData[{
Cell[52104, 995, 357, 6, 115, "Section",ExpressionUUID->"9da2f665-490d-4eff-958e-d59681e4f486"],
Cell[CellGroupData[{
Cell[52486, 1005, 228, 7, 105, "Subsection",ExpressionUUID->"a08072db-6953-469f-b171-555db9b39121"],
Cell[52717, 1014, 2611, 37, 105, "Text",ExpressionUUID->"d16be30f-d1fe-4182-83e6-5897c1d42f32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55365, 1056, 743, 10, 69, "Subsection",ExpressionUUID->"dc41825a-3b40-40a5-ac4a-ccdcf8ee7768"],
Cell[56111, 1068, 3282, 58, 462, "Text",ExpressionUUID->"3e2799fd-e776-4288-a20e-690e2c89f7ec"],
Cell[59396, 1128, 1631, 36, 127, "Input",ExpressionUUID->"68da65b6-ec7d-4316-b4b4-c5e52c1c4cd9"],
Cell[61030, 1166, 71306, 1174, 174, "Text",ExpressionUUID->"05450db2-e1ed-427d-9bdd-0b0137c754b4"],
Cell[CellGroupData[{
Cell[132361, 2344, 4226, 105, 417, "Input",ExpressionUUID->"c9a83d1f-821d-461b-b64b-a8a0822e3e90"],
Cell[136590, 2451, 1680, 44, 108, "Output",ExpressionUUID->"4dc98967-2465-4427-b4eb-6475dbd2b90e"]
}, Open  ]],
Cell[138285, 2498, 1440, 36, 243, "Input",ExpressionUUID->"fa11d67d-4f1c-4e01-acb2-0f1631d162bf"],
Cell[CellGroupData[{
Cell[139750, 2538, 868, 19, 127, "Input",ExpressionUUID->"07088672-955e-45bb-aba0-2972ba11ce27"],
Cell[140621, 2559, 3152, 64, 129, "Output",ExpressionUUID->"e0b5065f-0b58-4426-8154-34602d5fe8b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143810, 2628, 2061, 45, 272, "Input",ExpressionUUID->"49b416c1-4c8e-4f68-adbf-ecb9cb95a874"],
Cell[145874, 2675, 3340, 93, 76, "Output",ExpressionUUID->"1442edd1-9eea-48b2-904a-f0ba623403ac"],
Cell[149217, 2770, 1490, 36, 74, "Output",ExpressionUUID->"8eb9d81b-0cc9-421d-8b3c-2577a2f14dac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150744, 2811, 3635, 91, 417, "Input",ExpressionUUID->"be4eab20-789e-43a4-9b09-b5ccd9bf1be7"],
Cell[154382, 2904, 4590, 122, 186, "Output",ExpressionUUID->"45dc8a1e-be2f-4d56-a52c-0ce9c58e8300"],
Cell[158975, 3028, 686, 17, 66, "Output",ExpressionUUID->"f95f5caa-6046-4c63-aa8a-9631de4424b1"],
Cell[159664, 3047, 924, 25, 66, "Output",ExpressionUUID->"22112938-26d2-4c3b-a58a-c50ef0ef7e77"],
Cell[160591, 3074, 676, 16, 70, "Output",ExpressionUUID->"a7d6f2e3-04f0-4c09-a5f2-a48371c9ab56"],
Cell[161270, 3092, 962, 26, 73, "Output",ExpressionUUID->"3841e399-cc45-4ea0-9568-0a7cffed3c23"],
Cell[162235, 3120, 617, 14, 70, "Output",ExpressionUUID->"80e1c883-8a3f-4a7d-aa75-e0538e5354c5"],
Cell[162855, 3136, 500, 10, 42, "Output",ExpressionUUID->"b3a78664-b368-43cf-a36f-42d6d5adc65b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163392, 3151, 6968, 182, 662, "Input",ExpressionUUID->"9dc1df58-8e60-4f05-a7b3-526bee56857e"],
Cell[170363, 3335, 562, 12, 42, "Output",ExpressionUUID->"22a8c556-aa97-40d6-992f-be9182c9b237"],
Cell[170928, 3349, 562, 12, 42, "Output",ExpressionUUID->"0b7a9334-7ece-47f4-bdac-14c6b132ea0c"],
Cell[171493, 3363, 512, 10, 42, "Output",ExpressionUUID->"5ee15b8b-b320-4c2c-971d-691bfae34946"],
Cell[172008, 3375, 513, 10, 42, "Output",ExpressionUUID->"b8657534-67f8-422f-90f3-6ed43654a6c9"],
Cell[172524, 3387, 626, 14, 46, "Output",ExpressionUUID->"102b14c5-de72-4386-8702-911b48c9b996"],
Cell[173153, 3403, 1612, 40, 46, "Output",ExpressionUUID->"e0ac0c2f-5a95-4920-973c-b40d444c975e"],
Cell[174768, 3445, 474, 9, 42, "Output",ExpressionUUID->"75027475-ea19-4e48-88c8-a8e3b0ca830c"],
Cell[175245, 3456, 395, 6, 42, "Output",ExpressionUUID->"b811ec2c-2830-45eb-8630-85d77599d9f5"],
Cell[175643, 3464, 411, 6, 42, "Output",ExpressionUUID->"91eb89c1-97d9-4271-8080-ea9a31a26fa9"],
Cell[176057, 3472, 398, 6, 42, "Output",ExpressionUUID->"dc6b27ff-dc22-40d0-b485-074df459d7ac"],
Cell[176458, 3480, 622, 14, 46, "Output",ExpressionUUID->"281af76f-86cd-4ef9-970c-65c63f6c0d90"],
Cell[177083, 3496, 1584, 40, 46, "Output",ExpressionUUID->"4c5f1f41-e52b-455a-8f9d-bf6ceee10dfb"],
Cell[178670, 3538, 474, 9, 42, "Output",ExpressionUUID->"9e2cd4a9-ce64-4d24-988c-c8fb46fa579e"],
Cell[179147, 3549, 395, 6, 42, "Output",ExpressionUUID->"c0dad048-a839-4cec-b311-6f548f5519ee"],
Cell[179545, 3557, 397, 6, 42, "Output",ExpressionUUID->"3bd96ce7-f1f0-4333-98f0-16443f2922a6"],
Cell[179945, 3565, 397, 6, 42, "Output",ExpressionUUID->"5ad9c490-cb5e-40b7-905b-76f38233c3c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180379, 3576, 3547, 83, 298, "Input",ExpressionUUID->"5ce0b1df-7cf0-426c-b8bb-c7dc352ac51b"],
Cell[183929, 3661, 22230, 439, 321, "Output",ExpressionUUID->"ceb6b2f8-0801-48aa-ad9c-ecf1e59baef3"],
Cell[206162, 4102, 22132, 437, 321, "Output",ExpressionUUID->"9d095e11-0755-4630-a7cd-1496b2722696"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228331, 4544, 1671, 43, 90, "Input",ExpressionUUID->"0d371602-6079-4923-8681-42d346310a71"],
Cell[230005, 4589, 526, 10, 42, "Output",ExpressionUUID->"5eaa5506-68da-4ebf-8f03-5cd795ce3af7"],
Cell[230534, 4601, 671, 16, 42, "Output",ExpressionUUID->"c440078e-300c-4dcc-919f-76383a4b3aff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231254, 4623, 454, 7, 48, "Subsection",ExpressionUUID->"52c71213-1211-4b2c-8a74-939e51ab2cda"],
Cell[231711, 4632, 4057, 100, 591, "Text",ExpressionUUID->"27fc6839-1ce0-4feb-8b96-6840fe8015a6"]
}, Closed]],
Cell[CellGroupData[{
Cell[235805, 4737, 659, 11, 48, "Subsection",ExpressionUUID->"a630f5bd-6e64-4162-ad1f-08c7531e1e9a"],
Cell[236467, 4750, 3281, 64, 332, "Text",ExpressionUUID->"5e6f7a89-89f7-4314-87d4-93f82d0a5c25"]
}, Closed]],
Cell[CellGroupData[{
Cell[239785, 4819, 542, 8, 48, "Subsection",ExpressionUUID->"222bf6b2-50e1-4a26-8713-46c02254344f"],
Cell[240330, 4829, 4332, 102, 332, "Text",ExpressionUUID->"8521156c-31cb-4d1a-aa55-b1392d84135c"]
}, Closed]],
Cell[CellGroupData[{
Cell[244699, 4936, 464, 8, 48, "Subsection",ExpressionUUID->"02ca5f49-27be-443c-b9f8-a25da747186d"],
Cell[245166, 4946, 6475, 131, 631, "Text",ExpressionUUID->"5ebf3536-227a-481a-a899-3f0be03e0a26"]
}, Closed]]
}, Open  ]]
}
]
*)

